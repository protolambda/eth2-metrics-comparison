{
  "aggregated_attestations_in_pool_total": {
    "doc": {
      "prysm": "The number of aggregated attestations in the pool."
    },
    "labels": {
      "prysm": {}
    },
    "type": {
      "prysm": "gauge"
    }
  },
  "async_tasks_count": {
    "doc": {
      "lighthouse": "Total number of async tasks spawned using spawn"
    },
    "labels": {
      "lighthouse": {
        "async_task_count": [
          "discv5",
          "eth1",
          "http",
          "sync",
          "timer"
        ]
      }
    },
    "type": {
      "lighthouse": "gauge"
    }
  },
  "attestation_cache_hit": {
    "doc": {
      "prysm": "The number of attestation data requests that are present in the cache."
    },
    "labels": {
      "prysm": {}
    },
    "type": {
      "prysm": "counter"
    }
  },
  "attestation_cache_miss": {
    "doc": {
      "prysm": "The number of attestation data requests that aren't present in the cache."
    },
    "labels": {
      "prysm": {}
    },
    "type": {
      "prysm": "counter"
    }
  },
  "attestation_cache_size": {
    "doc": {
      "prysm": "The number of attestation data in the attestations cache"
    },
    "labels": {
      "prysm": {}
    },
    "type": {
      "prysm": "gauge"
    }
  },
  "attestation_inclusion_delay_slots": {
    "doc": {
      "prysm": "The number of slots between att.Slot and block.Slot"
    },
    "labels": {
      "prysm": {
        "le": [
          "1",
          "2",
          "3",
          "4",
          "6",
          "32",
          "64",
          "+Inf"
        ]
      }
    },
    "type": {
      "prysm": "histogram"
    }
  },
  "attester_slashing_reattempts": {
    "doc": {
      "prysm": "Times an attester slashing for an already slashed validator is received"
    },
    "labels": {
      "prysm": {}
    },
    "type": {
      "prysm": "counter"
    }
  },
  "attester_slashings_included": {
    "doc": {
      "prysm": "Number of attester slashings included in blocks"
    },
    "labels": {
      "prysm": {}
    },
    "type": {
      "prysm": "counter"
    }
  },
  "beacon_aggregated_attestation_gossip_verification_seconds": {
    "doc": {
      "lighthouse": "Full runtime of aggregated attestation gossip verification"
    },
    "labels": {
      "lighthouse": {
        "le": [
          "0.005",
          "0.01",
          "0.025",
          "0.05",
          "0.1",
          "0.25",
          "0.5",
          "1",
          "2.5",
          "5",
          "10",
          "+Inf"
        ]
      }
    },
    "type": {
      "lighthouse": "histogram"
    }
  },
  "beacon_aggregated_attestation_processing_requests": {
    "doc": {
      "lighthouse": "Count of all aggregated attestations submitted for processing"
    },
    "labels": {
      "lighthouse": {}
    },
    "type": {
      "lighthouse": "counter"
    }
  },
  "beacon_aggregated_attestation_processing_successes": {
    "doc": {
      "lighthouse": "Number of aggregated attestations verified for gossip"
    },
    "labels": {
      "lighthouse": {}
    },
    "type": {
      "lighthouse": "counter"
    }
  },
  "beacon_attestation_processing_agg_pool_aggregation": {
    "doc": {
      "lighthouse": "Time spent doing signature aggregation when adding to the agg poll"
    },
    "labels": {
      "lighthouse": {
        "le": [
          "0.005",
          "0.01",
          "0.025",
          "0.05",
          "0.1",
          "0.25",
          "0.5",
          "1",
          "2.5",
          "5",
          "10",
          "+Inf"
        ]
      }
    },
    "type": {
      "lighthouse": "histogram"
    }
  },
  "beacon_attestation_processing_agg_pool_core_insert": {
    "doc": {
      "lighthouse": "Time spent for the core map.insert() function of agg pool"
    },
    "labels": {
      "lighthouse": {
        "le": [
          "0.005",
          "0.01",
          "0.025",
          "0.05",
          "0.1",
          "0.25",
          "0.5",
          "1",
          "2.5",
          "5",
          "10",
          "+Inf"
        ]
      }
    },
    "type": {
      "lighthouse": "histogram"
    }
  },
  "beacon_attestation_processing_agg_pool_create_map": {
    "doc": {
      "lighthouse": "Time spent for creating a map for a new slot"
    },
    "labels": {
      "lighthouse": {
        "le": [
          "0.005",
          "0.01",
          "0.025",
          "0.05",
          "0.1",
          "0.25",
          "0.5",
          "1",
          "2.5",
          "5",
          "10",
          "+Inf"
        ]
      }
    },
    "type": {
      "lighthouse": "histogram"
    }
  },
  "beacon_attestation_processing_agg_pool_insert": {
    "doc": {
      "lighthouse": "Time spent for the outer pool.insert() function of agg pool"
    },
    "labels": {
      "lighthouse": {
        "le": [
          "0.005",
          "0.01",
          "0.025",
          "0.05",
          "0.1",
          "0.25",
          "0.5",
          "1",
          "2.5",
          "5",
          "10",
          "+Inf"
        ]
      }
    },
    "type": {
      "lighthouse": "histogram"
    }
  },
  "beacon_attestation_processing_agg_pool_maps_write_lock": {
    "doc": {
      "lighthouse": "Time spent waiting for the maps write lock when adding to the agg poll"
    },
    "labels": {
      "lighthouse": {
        "le": [
          "0.005",
          "0.01",
          "0.025",
          "0.05",
          "0.1",
          "0.25",
          "0.5",
          "1",
          "2.5",
          "5",
          "10",
          "+Inf"
        ]
      }
    },
    "type": {
      "lighthouse": "histogram"
    }
  },
  "beacon_attestation_processing_agg_pool_prune": {
    "doc": {
      "lighthouse": "Time spent for the agg pool to prune"
    },
    "labels": {
      "lighthouse": {
        "le": [
          "0.005",
          "0.01",
          "0.025",
          "0.05",
          "0.1",
          "0.25",
          "0.5",
          "1",
          "2.5",
          "5",
          "10",
          "+Inf"
        ]
      }
    },
    "type": {
      "lighthouse": "histogram"
    }
  },
  "beacon_attestation_processing_apply_to_agg_pool": {
    "doc": {
      "lighthouse": "Time spent applying an attestation to the naive aggregation pool"
    },
    "labels": {
      "lighthouse": {
        "le": [
          "0.005",
          "0.01",
          "0.025",
          "0.05",
          "0.1",
          "0.25",
          "0.5",
          "1",
          "2.5",
          "5",
          "10",
          "+Inf"
        ]
      }
    },
    "type": {
      "lighthouse": "histogram"
    }
  },
  "beacon_attestation_processing_apply_to_op_pool": {
    "doc": {
      "lighthouse": "Time spent applying an attestation to the block inclusion pool"
    },
    "labels": {
      "lighthouse": {
        "le": [
          "0.005",
          "0.01",
          "0.025",
          "0.05",
          "0.1",
          "0.25",
          "0.5",
          "1",
          "2.5",
          "5",
          "10",
          "+Inf"
        ]
      }
    },
    "type": {
      "lighthouse": "histogram"
    }
  },
  "beacon_attestation_processing_committee_building_seconds": {
    "doc": {
      "lighthouse": "Time spent on building committees during attestation processing"
    },
    "labels": {
      "lighthouse": {
        "le": [
          "0.005",
          "0.01",
          "0.025",
          "0.05",
          "0.1",
          "0.25",
          "0.5",
          "1",
          "2.5",
          "5",
          "10",
          "+Inf"
        ]
      }
    },
    "type": {
      "lighthouse": "histogram"
    }
  },
  "beacon_attestation_processing_shuffling_cache_wait_seconds": {
    "doc": {
      "lighthouse": "Time spent on waiting for the shuffling cache lock during attestation processing"
    },
    "labels": {
      "lighthouse": {
        "le": [
          "0.005",
          "0.01",
          "0.025",
          "0.05",
          "0.1",
          "0.25",
          "0.5",
          "1",
          "2.5",
          "5",
          "10",
          "+Inf"
        ]
      }
    },
    "type": {
      "lighthouse": "histogram"
    }
  },
  "beacon_attestation_processing_signature_seconds": {
    "doc": {
      "lighthouse": "Time spent on the signature verification of attestation processing"
    },
    "labels": {
      "lighthouse": {
        "le": [
          "0.005",
          "0.01",
          "0.025",
          "0.05",
          "0.1",
          "0.25",
          "0.5",
          "1",
          "2.5",
          "5",
          "10",
          "+Inf"
        ]
      }
    },
    "type": {
      "lighthouse": "histogram"
    }
  },
  "beacon_attestation_processing_signature_setup_seconds": {
    "doc": {
      "lighthouse": "Time spent on setting up for the signature verification of attestation processing"
    },
    "labels": {
      "lighthouse": {
        "le": [
          "0.005",
          "0.01",
          "0.025",
          "0.05",
          "0.1",
          "0.25",
          "0.5",
          "1",
          "2.5",
          "5",
          "10",
          "+Inf"
        ]
      }
    },
    "type": {
      "lighthouse": "histogram"
    }
  },
  "beacon_attestation_processing_state_read_seconds": {
    "doc": {
      "lighthouse": "Time spent on reading the state during attestation processing"
    },
    "labels": {
      "lighthouse": {
        "le": [
          "0.005",
          "0.01",
          "0.025",
          "0.05",
          "0.1",
          "0.25",
          "0.5",
          "1",
          "2.5",
          "5",
          "10",
          "+Inf"
        ]
      }
    },
    "type": {
      "lighthouse": "histogram"
    }
  },
  "beacon_attestation_processing_state_skip_seconds": {
    "doc": {
      "lighthouse": "Time spent on reading the state during attestation processing"
    },
    "labels": {
      "lighthouse": {
        "le": [
          "0.005",
          "0.01",
          "0.025",
          "0.05",
          "0.1",
          "0.25",
          "0.5",
          "1",
          "2.5",
          "5",
          "10",
          "+Inf"
        ]
      }
    },
    "type": {
      "lighthouse": "histogram"
    }
  },
  "beacon_attestation_received_seconds_from_slot_start": {
    "doc": {
      "nimbus": "Interval between slot start and attestation receival"
    },
    "labels": {
      "nimbus": {}
    },
    "type": {
      "nimbus": "histogram"
    }
  },
  "beacon_attestation_received_seconds_from_slot_start_bucket": {
    "doc": {
      "nimbus": ""
    },
    "labels": {
      "nimbus": {
        "le": [
          "2.0",
          "4.0",
          "6.0",
          "8.0",
          "10.0",
          "12.0",
          "14.0",
          "+Inf"
        ]
      }
    },
    "type": {
      "nimbus": "unknown"
    }
  },
  "beacon_attestation_received_seconds_from_slot_start_created": {
    "doc": {
      "nimbus": ""
    },
    "labels": {
      "nimbus": {}
    },
    "type": {
      "nimbus": "unknown"
    }
  },
  "beacon_attestations_not_recovered": {
    "doc": {
      "prysm": "Count the number of times attestation not recovered and pruned because of missing block"
    },
    "labels": {
      "prysm": {}
    },
    "type": {
      "prysm": "counter"
    }
  },
  "beacon_attestations_received": {
    "doc": {
      "nimbus": "Number of beacon chain attestations received by this peer"
    },
    "labels": {
      "nimbus": {}
    },
    "type": {
      "nimbus": "counter"
    }
  },
  "beacon_attestations_received_created": {
    "doc": {
      "nimbus": ""
    },
    "labels": {
      "nimbus": {}
    },
    "type": {
      "nimbus": "unknown"
    }
  },
  "beacon_attestations_received_total": {
    "doc": {
      "nimbus": ""
    },
    "labels": {
      "nimbus": {}
    },
    "type": {
      "nimbus": "unknown"
    }
  },
  "beacon_attestations_recovered": {
    "doc": {
      "prysm": "Count the number of times attestation recovered because of missing block"
    },
    "labels": {
      "prysm": {}
    },
    "type": {
      "prysm": "counter"
    }
  },
  "beacon_attestations_sent": {
    "doc": {
      "nimbus": "Number of beacon chain attestations sent by this peer"
    },
    "labels": {
      "nimbus": {}
    },
    "type": {
      "nimbus": "counter"
    }
  },
  "beacon_attestations_sent_created": {
    "doc": {
      "nimbus": ""
    },
    "labels": {
      "nimbus": {}
    },
    "type": {
      "nimbus": "unknown"
    }
  },
  "beacon_attestations_sent_total": {
    "doc": {
      "nimbus": ""
    },
    "labels": {
      "nimbus": {}
    },
    "type": {
      "nimbus": "unknown"
    }
  },
  "beacon_attn_observation_epoch_aggregators": {
    "doc": {
      "lighthouse": "Count of aggregators that have been seen by the beacon chain in the previous epoch"
    },
    "labels": {
      "lighthouse": {}
    },
    "type": {
      "lighthouse": "gauge"
    }
  },
  "beacon_attn_observation_epoch_attesters": {
    "doc": {
      "lighthouse": "Count of attesters that have been seen by the beacon chain in the previous epoch"
    },
    "labels": {
      "lighthouse": {}
    },
    "type": {
      "lighthouse": "gauge"
    }
  },
  "beacon_balances_cache_hits": {
    "doc": {
      "lighthouse": "Count of times balances cache fulfils request"
    },
    "labels": {
      "lighthouse": {}
    },
    "type": {
      "lighthouse": "counter"
    }
  },
  "beacon_balances_cache_misses": {
    "doc": {
      "lighthouse": "Count of times balances cache fulfils request"
    },
    "labels": {
      "lighthouse": {}
    },
    "type": {
      "lighthouse": "counter"
    }
  },
  "beacon_block_import": {
    "doc": {
      "teku": "The number of block imports performed"
    },
    "labels": {
      "teku": {
        "result": [
          "imported"
        ]
      }
    },
    "type": {
      "teku": "counter"
    }
  },
  "beacon_block_processing_attestation_observation_seconds": {
    "doc": {
      "lighthouse": "Time spent hashing and remembering all the attestations in the block"
    },
    "labels": {
      "lighthouse": {
        "le": [
          "0.005",
          "0.01",
          "0.025",
          "0.05",
          "0.1",
          "0.25",
          "0.5",
          "1",
          "2.5",
          "5",
          "10",
          "+Inf"
        ]
      }
    },
    "type": {
      "lighthouse": "histogram"
    }
  },
  "beacon_block_processing_block_root_seconds": {
    "doc": {
      "lighthouse": "Time spent calculating the block root when processing a block."
    },
    "labels": {
      "lighthouse": {
        "le": [
          "0.005",
          "0.01",
          "0.025",
          "0.05",
          "0.1",
          "0.25",
          "0.5",
          "1",
          "2.5",
          "5",
          "10",
          "+Inf"
        ]
      }
    },
    "type": {
      "lighthouse": "histogram"
    }
  },
  "beacon_block_processing_catch_up_state_seconds": {
    "doc": {
      "lighthouse": "Time spent skipping slots on a state before processing a block."
    },
    "labels": {
      "lighthouse": {
        "le": [
          "0.005",
          "0.01",
          "0.025",
          "0.05",
          "0.1",
          "0.25",
          "0.5",
          "1",
          "2.5",
          "5",
          "10",
          "+Inf"
        ]
      }
    },
    "type": {
      "lighthouse": "histogram"
    }
  },
  "beacon_block_processing_committee_building_seconds": {
    "doc": {
      "lighthouse": "Time spent building/obtaining committees for block processing."
    },
    "labels": {
      "lighthouse": {
        "le": [
          "0.005",
          "0.01",
          "0.025",
          "0.05",
          "0.1",
          "0.25",
          "0.5",
          "1",
          "2.5",
          "5",
          "10",
          "+Inf"
        ]
      }
    },
    "type": {
      "lighthouse": "histogram"
    }
  },
  "beacon_block_processing_core_seconds": {
    "doc": {
      "lighthouse": "Time spent doing the core per_block_processing state processing."
    },
    "labels": {
      "lighthouse": {
        "le": [
          "0.005",
          "0.01",
          "0.025",
          "0.05",
          "0.1",
          "0.25",
          "0.5",
          "1",
          "2.5",
          "5",
          "10",
          "+Inf"
        ]
      }
    },
    "type": {
      "lighthouse": "histogram"
    }
  },
  "beacon_block_processing_db_read_seconds": {
    "doc": {
      "lighthouse": "Time spent loading block and state from DB for block processing"
    },
    "labels": {
      "lighthouse": {
        "le": [
          "0.005",
          "0.01",
          "0.025",
          "0.05",
          "0.1",
          "0.25",
          "0.5",
          "1",
          "2.5",
          "5",
          "10",
          "+Inf"
        ]
      }
    },
    "type": {
      "lighthouse": "histogram"
    }
  },
  "beacon_block_processing_db_write_seconds": {
    "doc": {
      "lighthouse": "Time spent writing a newly processed block and state to DB"
    },
    "labels": {
      "lighthouse": {
        "le": [
          "0.005",
          "0.01",
          "0.025",
          "0.05",
          "0.1",
          "0.25",
          "0.5",
          "1",
          "2.5",
          "5",
          "10",
          "+Inf"
        ]
      }
    },
    "type": {
      "lighthouse": "histogram"
    }
  },
  "beacon_block_processing_requests": {
    "doc": {
      "lighthouse": "Count of blocks submitted for processing"
    },
    "labels": {
      "lighthouse": {}
    },
    "type": {
      "lighthouse": "counter"
    }
  },
  "beacon_block_processing_seconds": {
    "doc": {
      "lighthouse": "Full runtime of block processing"
    },
    "labels": {
      "lighthouse": {
        "le": [
          "0.005",
          "0.01",
          "0.025",
          "0.05",
          "0.1",
          "0.25",
          "0.5",
          "1",
          "2.5",
          "5",
          "10",
          "+Inf"
        ]
      }
    },
    "type": {
      "lighthouse": "histogram"
    }
  },
  "beacon_block_processing_state_root_seconds": {
    "doc": {
      "lighthouse": "Time spent calculating the state root when processing a block."
    },
    "labels": {
      "lighthouse": {
        "le": [
          "0.005",
          "0.01",
          "0.025",
          "0.05",
          "0.1",
          "0.25",
          "0.5",
          "1",
          "2.5",
          "5",
          "10",
          "+Inf"
        ]
      }
    },
    "type": {
      "lighthouse": "histogram"
    }
  },
  "beacon_block_processing_successes": {
    "doc": {
      "lighthouse": "Count of blocks processed without error"
    },
    "labels": {
      "lighthouse": {}
    },
    "type": {
      "lighthouse": "counter"
    }
  },
  "beacon_block_production_requests": {
    "doc": {
      "lighthouse": "Count of all block production requests"
    },
    "labels": {
      "lighthouse": {}
    },
    "type": {
      "lighthouse": "counter"
    }
  },
  "beacon_block_production_seconds": {
    "doc": {
      "lighthouse": "Full runtime of block production"
    },
    "labels": {
      "lighthouse": {
        "le": [
          "0.005",
          "0.01",
          "0.025",
          "0.05",
          "0.1",
          "0.25",
          "0.5",
          "1",
          "2.5",
          "5",
          "10",
          "+Inf"
        ]
      }
    },
    "type": {
      "lighthouse": "histogram"
    }
  },
  "beacon_block_production_successes": {
    "doc": {
      "lighthouse": "Count of blocks successfully produced."
    },
    "labels": {
      "lighthouse": {}
    },
    "type": {
      "lighthouse": "counter"
    }
  },
  "beacon_blocks_not_recovered_from_attestation": {
    "doc": {
      "prysm": "Count the number of times a missing block not recovered and pruned from attestation vote."
    },
    "labels": {
      "prysm": {}
    },
    "type": {
      "prysm": "counter"
    }
  },
  "beacon_blocks_proposed": {
    "doc": {
      "nimbus": "Number of beacon chain blocks sent by this peer"
    },
    "labels": {
      "nimbus": {}
    },
    "type": {
      "nimbus": "counter"
    }
  },
  "beacon_blocks_proposed_created": {
    "doc": {
      "nimbus": ""
    },
    "labels": {
      "nimbus": {}
    },
    "type": {
      "nimbus": "unknown"
    }
  },
  "beacon_blocks_proposed_total": {
    "doc": {
      "nimbus": ""
    },
    "labels": {
      "nimbus": {}
    },
    "type": {
      "nimbus": "unknown"
    }
  },
  "beacon_blocks_received": {
    "doc": {
      "nimbus": "Number of beacon chain blocks received by this peer"
    },
    "labels": {
      "nimbus": {}
    },
    "type": {
      "nimbus": "counter"
    }
  },
  "beacon_blocks_received_created": {
    "doc": {
      "nimbus": ""
    },
    "labels": {
      "nimbus": {}
    },
    "type": {
      "nimbus": "unknown"
    }
  },
  "beacon_blocks_received_total": {
    "doc": {
      "nimbus": ""
    },
    "labels": {
      "nimbus": {}
    },
    "type": {
      "nimbus": "unknown"
    }
  },
  "beacon_blocks_recovered_from_attestation": {
    "doc": {
      "prysm": "Count the number of times a missing block recovered from attestation vote."
    },
    "labels": {
      "prysm": {}
    },
    "type": {
      "prysm": "counter"
    }
  },
  "beacon_clock_time_slot": {
    "doc": {
      "prysm": "The current slot based on the genesis time and current clock"
    },
    "labels": {
      "prysm": {}
    },
    "type": {
      "prysm": "gauge"
    }
  },
  "beacon_current_active_validators": {
    "doc": {
      "teku": "Number of active validators in the current epoch"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "beacon_current_epoch": {
    "doc": {
      "nimbus": "Current epoch"
    },
    "labels": {
      "nimbus": {}
    },
    "type": {
      "nimbus": "gauge"
    }
  },
  "beacon_current_epoch_created": {
    "doc": {
      "nimbus": ""
    },
    "labels": {
      "nimbus": {}
    },
    "type": {
      "nimbus": "unknown"
    }
  },
  "beacon_current_justified_epoch": {
    "doc": {
      "nimbus": "Current justified epoch",
      "prysm": "Current justified epoch of the processed state",
      "teku": "Current justified epoch"
    },
    "labels": {
      "nimbus": {},
      "prysm": {},
      "teku": {}
    },
    "type": {
      "nimbus": "gauge",
      "prysm": "gauge",
      "teku": "gauge"
    }
  },
  "beacon_current_justified_epoch_created": {
    "doc": {
      "nimbus": ""
    },
    "labels": {
      "nimbus": {}
    },
    "type": {
      "nimbus": "unknown"
    }
  },
  "beacon_current_justified_root": {
    "doc": {
      "nimbus": "Current justified root",
      "prysm": "Current justified root of the processed state",
      "teku": "Current justified root"
    },
    "labels": {
      "nimbus": {},
      "prysm": {},
      "teku": {}
    },
    "type": {
      "nimbus": "gauge",
      "prysm": "gauge",
      "teku": "gauge"
    }
  },
  "beacon_current_justified_root_created": {
    "doc": {
      "nimbus": ""
    },
    "labels": {
      "nimbus": {}
    },
    "type": {
      "nimbus": "unknown"
    }
  },
  "beacon_current_live_validators": {
    "doc": {
      "nimbus": "Number of active validators that successfully included attestation on chain for current epoch",
      "teku": "Number of active validators that successfully included attestation on chain for current epoch"
    },
    "labels": {
      "nimbus": {},
      "teku": {}
    },
    "type": {
      "nimbus": "gauge",
      "teku": "gauge"
    }
  },
  "beacon_current_live_validators_created": {
    "doc": {
      "nimbus": ""
    },
    "labels": {
      "nimbus": {}
    },
    "type": {
      "nimbus": "unknown"
    }
  },
  "beacon_current_validators": {
    "doc": {
      "nimbus": "Number of status=\"pending|active|exited|withdrawable\" validators in current epoch"
    },
    "labels": {
      "nimbus": {}
    },
    "type": {
      "nimbus": "gauge"
    }
  },
  "beacon_current_validators_created": {
    "doc": {
      "nimbus": ""
    },
    "labels": {
      "nimbus": {}
    },
    "type": {
      "nimbus": "unknown"
    }
  },
  "beacon_epoch": {
    "doc": {
      "teku": "Latest epoch recorded by the beacon chain"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "beacon_finalized_epoch": {
    "doc": {
      "nimbus": "Current finalized epoch",
      "prysm": "Last finalized epoch of the processed state",
      "teku": "Current finalized epoch"
    },
    "labels": {
      "nimbus": {},
      "prysm": {},
      "teku": {}
    },
    "type": {
      "nimbus": "gauge",
      "prysm": "gauge",
      "teku": "gauge"
    }
  },
  "beacon_finalized_epoch_created": {
    "doc": {
      "nimbus": ""
    },
    "labels": {
      "nimbus": {}
    },
    "type": {
      "nimbus": "unknown"
    }
  },
  "beacon_finalized_root": {
    "doc": {
      "nimbus": "Current finalized root",
      "prysm": "Last finalized root of the processed state",
      "teku": "Current finalized root"
    },
    "labels": {
      "nimbus": {},
      "prysm": {},
      "teku": {}
    },
    "type": {
      "nimbus": "gauge",
      "prysm": "gauge",
      "teku": "gauge"
    }
  },
  "beacon_finalized_root_created": {
    "doc": {
      "nimbus": ""
    },
    "labels": {
      "nimbus": {}
    },
    "type": {
      "nimbus": "unknown"
    }
  },
  "beacon_fork_choice_changed_head": {
    "doc": {
      "lighthouse": "Count of occasions fork choice has found a new head"
    },
    "labels": {
      "lighthouse": {}
    },
    "type": {
      "lighthouse": "counter"
    }
  },
  "beacon_fork_choice_process_attestation_seconds": {
    "doc": {
      "lighthouse": "Time taken to add an attestation to fork choice"
    },
    "labels": {
      "lighthouse": {
        "le": [
          "0.005",
          "0.01",
          "0.025",
          "0.05",
          "0.1",
          "0.25",
          "0.5",
          "1",
          "2.5",
          "5",
          "10",
          "+Inf"
        ]
      }
    },
    "type": {
      "lighthouse": "histogram"
    }
  },
  "beacon_fork_choice_process_block_seconds": {
    "doc": {
      "lighthouse": "Time taken to add a block and all attestations to fork choice"
    },
    "labels": {
      "lighthouse": {
        "le": [
          "0.005",
          "0.01",
          "0.025",
          "0.05",
          "0.1",
          "0.25",
          "0.5",
          "1",
          "2.5",
          "5",
          "10",
          "+Inf"
        ]
      }
    },
    "type": {
      "lighthouse": "histogram"
    }
  },
  "beacon_fork_choice_reorg": {
    "doc": {
      "lighthouse": "Count of occasions fork choice has switched to a different chain"
    },
    "labels": {
      "lighthouse": {}
    },
    "type": {
      "lighthouse": "counter"
    }
  },
  "beacon_fork_choice_requests": {
    "doc": {
      "lighthouse": "Count of occasions where fork choice has tried to find a head"
    },
    "labels": {
      "lighthouse": {}
    },
    "type": {
      "lighthouse": "counter"
    }
  },
  "beacon_fork_choice_seconds": {
    "doc": {
      "lighthouse": "Full runtime of fork choice"
    },
    "labels": {
      "lighthouse": {
        "le": [
          "0.005",
          "0.01",
          "0.025",
          "0.05",
          "0.1",
          "0.25",
          "0.5",
          "1",
          "2.5",
          "5",
          "10",
          "+Inf"
        ]
      }
    },
    "type": {
      "lighthouse": "histogram"
    }
  },
  "beacon_head_root": {
    "doc": {
      "nimbus": "Root of the head block of the beacon chain",
      "teku": "Root of the head block of the beacon chain"
    },
    "labels": {
      "nimbus": {},
      "teku": {}
    },
    "type": {
      "nimbus": "gauge",
      "teku": "gauge"
    }
  },
  "beacon_head_root_created": {
    "doc": {
      "nimbus": ""
    },
    "labels": {
      "nimbus": {}
    },
    "type": {
      "nimbus": "unknown"
    }
  },
  "beacon_head_slot": {
    "doc": {
      "nimbus": "Slot of the head block of the beacon chain",
      "prysm": "Slot of the head block of the beacon chain",
      "teku": "Slot of the head block of the beacon chain"
    },
    "labels": {
      "nimbus": {},
      "prysm": {},
      "teku": {}
    },
    "type": {
      "nimbus": "gauge",
      "prysm": "gauge",
      "teku": "gauge"
    }
  },
  "beacon_head_slot_created": {
    "doc": {
      "nimbus": ""
    },
    "labels": {
      "nimbus": {}
    },
    "type": {
      "nimbus": "unknown"
    }
  },
  "beacon_head_state_active_validators_total": {
    "doc": {
      "lighthouse": "Count of active validators at the head of the chain"
    },
    "labels": {
      "lighthouse": {}
    },
    "type": {
      "lighthouse": "gauge"
    }
  },
  "beacon_head_state_current_justified_epoch": {
    "doc": {
      "lighthouse": "Current justified epoch at the head of the chain"
    },
    "labels": {
      "lighthouse": {}
    },
    "type": {
      "lighthouse": "gauge"
    }
  },
  "beacon_head_state_current_justified_root": {
    "doc": {
      "lighthouse": "Current justified root at the head of the chain"
    },
    "labels": {
      "lighthouse": {}
    },
    "type": {
      "lighthouse": "gauge"
    }
  },
  "beacon_head_state_eth1_deposit_index": {
    "doc": {
      "lighthouse": "Eth1 deposit index at the head of the chain"
    },
    "labels": {
      "lighthouse": {}
    },
    "type": {
      "lighthouse": "gauge"
    }
  },
  "beacon_head_state_finalized_epoch": {
    "doc": {
      "lighthouse": "Finalized epoch at the head of the chain"
    },
    "labels": {
      "lighthouse": {}
    },
    "type": {
      "lighthouse": "gauge"
    }
  },
  "beacon_head_state_finalized_root": {
    "doc": {
      "lighthouse": "Finalized root at the head of the chain"
    },
    "labels": {
      "lighthouse": {}
    },
    "type": {
      "lighthouse": "gauge"
    }
  },
  "beacon_head_state_latest_block_slot": {
    "doc": {
      "lighthouse": "Latest block slot at the head of the chain"
    },
    "labels": {
      "lighthouse": {}
    },
    "type": {
      "lighthouse": "gauge"
    }
  },
  "beacon_head_state_previous_justified_epoch": {
    "doc": {
      "lighthouse": "Previous justified epoch at the head of the chain"
    },
    "labels": {
      "lighthouse": {}
    },
    "type": {
      "lighthouse": "gauge"
    }
  },
  "beacon_head_state_previous_justified_root": {
    "doc": {
      "lighthouse": "Previous justified root at the head of the chain"
    },
    "labels": {
      "lighthouse": {}
    },
    "type": {
      "lighthouse": "gauge"
    }
  },
  "beacon_head_state_root": {
    "doc": {
      "lighthouse": "Root of the block at the head of the chain"
    },
    "labels": {
      "lighthouse": {}
    },
    "type": {
      "lighthouse": "gauge"
    }
  },
  "beacon_head_state_slashed_validators_total": {
    "doc": {
      "lighthouse": "Count of all slashed validators at the head of the chain"
    },
    "labels": {
      "lighthouse": {}
    },
    "type": {
      "lighthouse": "gauge"
    }
  },
  "beacon_head_state_slot": {
    "doc": {
      "lighthouse": "Slot of the block at the head of the chain"
    },
    "labels": {
      "lighthouse": {}
    },
    "type": {
      "lighthouse": "gauge"
    }
  },
  "beacon_head_state_total_validators_total": {
    "doc": {
      "lighthouse": "Count of validators at the head of the chain"
    },
    "labels": {
      "lighthouse": {}
    },
    "type": {
      "lighthouse": "gauge"
    }
  },
  "beacon_head_state_validator_balances_total": {
    "doc": {
      "lighthouse": "Sum of all validator balances at the head of the chain"
    },
    "labels": {
      "lighthouse": {}
    },
    "type": {
      "lighthouse": "gauge"
    }
  },
  "beacon_head_state_withdrawn_validators_total": {
    "doc": {
      "lighthouse": "Sum of all validator balances at the head of the chain"
    },
    "labels": {
      "lighthouse": {}
    },
    "type": {
      "lighthouse": "gauge"
    }
  },
  "beacon_op_pool_attestations_total": {
    "doc": {
      "lighthouse": "Count of attestations in the op pool"
    },
    "labels": {
      "lighthouse": {}
    },
    "type": {
      "lighthouse": "gauge"
    }
  },
  "beacon_op_pool_attester_slashings_total": {
    "doc": {
      "lighthouse": "Count of attester slashings in the op pool"
    },
    "labels": {
      "lighthouse": {}
    },
    "type": {
      "lighthouse": "gauge"
    }
  },
  "beacon_op_pool_proposer_slashings_total": {
    "doc": {
      "lighthouse": "Count of proposer slashings in the op pool"
    },
    "labels": {
      "lighthouse": {}
    },
    "type": {
      "lighthouse": "gauge"
    }
  },
  "beacon_op_pool_voluntary_exits_total": {
    "doc": {
      "lighthouse": "Count of voluntary exits in the op pool"
    },
    "labels": {
      "lighthouse": {}
    },
    "type": {
      "lighthouse": "gauge"
    }
  },
  "beacon_operations_per_block_attestation_total": {
    "doc": {
      "lighthouse": "Number of attestations in a block"
    },
    "labels": {
      "lighthouse": {
        "le": [
          "0.005",
          "0.01",
          "0.025",
          "0.05",
          "0.1",
          "0.25",
          "0.5",
          "1",
          "2.5",
          "5",
          "10",
          "+Inf"
        ]
      }
    },
    "type": {
      "lighthouse": "histogram"
    }
  },
  "beacon_participation_prev_epoch_attester": {
    "doc": {
      "lighthouse": "Ratio of attesting balances to total balances"
    },
    "labels": {
      "lighthouse": {}
    },
    "type": {
      "lighthouse": "gauge"
    }
  },
  "beacon_participation_prev_epoch_head_attester": {
    "doc": {
      "lighthouse": "Ratio of head-attesting balances to total balances"
    },
    "labels": {
      "lighthouse": {}
    },
    "type": {
      "lighthouse": "gauge"
    }
  },
  "beacon_participation_prev_epoch_target_attester": {
    "doc": {
      "lighthouse": "Ratio of target-attesting balances to total balances"
    },
    "labels": {
      "lighthouse": {}
    },
    "type": {
      "lighthouse": "gauge"
    }
  },
  "beacon_peer_count": {
    "doc": {
      "teku": "Tracks number of connected peers, verified to be on the same chain"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "beacon_pending_deposits": {
    "doc": {
      "nimbus": "Number of pending deposits (state.eth1_data.deposit_count - state.eth1_deposit_index)"
    },
    "labels": {
      "nimbus": {}
    },
    "type": {
      "nimbus": "gauge"
    }
  },
  "beacon_pending_deposits_created": {
    "doc": {
      "nimbus": ""
    },
    "labels": {
      "nimbus": {}
    },
    "type": {
      "nimbus": "unknown"
    }
  },
  "beacon_persist_fork_choice": {
    "doc": {
      "lighthouse": "Time taken to persist the fork choice struct"
    },
    "labels": {
      "lighthouse": {
        "le": [
          "0.005",
          "0.01",
          "0.025",
          "0.05",
          "0.1",
          "0.25",
          "0.5",
          "1",
          "2.5",
          "5",
          "10",
          "+Inf"
        ]
      }
    },
    "type": {
      "lighthouse": "histogram"
    }
  },
  "beacon_persist_head": {
    "doc": {
      "lighthouse": "Time taken to persist the canonical head"
    },
    "labels": {
      "lighthouse": {
        "le": [
          "0.005",
          "0.01",
          "0.025",
          "0.05",
          "0.1",
          "0.25",
          "0.5",
          "1",
          "2.5",
          "5",
          "10",
          "+Inf"
        ]
      }
    },
    "type": {
      "lighthouse": "histogram"
    }
  },
  "beacon_previous_active_validators": {
    "doc": {
      "teku": "Number of active validators in the previous epoch"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "beacon_previous_justified_epoch": {
    "doc": {
      "nimbus": "Current previously justified epoch",
      "prysm": "Previous justified epoch of the processed state",
      "teku": "Current previously justified epoch"
    },
    "labels": {
      "nimbus": {},
      "prysm": {},
      "teku": {}
    },
    "type": {
      "nimbus": "gauge",
      "prysm": "gauge",
      "teku": "gauge"
    }
  },
  "beacon_previous_justified_epoch_created": {
    "doc": {
      "nimbus": ""
    },
    "labels": {
      "nimbus": {}
    },
    "type": {
      "nimbus": "unknown"
    }
  },
  "beacon_previous_justified_root": {
    "doc": {
      "nimbus": "Current previously justified root",
      "prysm": "Previous justified root of the processed state",
      "teku": "Current previously justified root"
    },
    "labels": {
      "nimbus": {},
      "prysm": {},
      "teku": {}
    },
    "type": {
      "nimbus": "gauge",
      "prysm": "gauge",
      "teku": "gauge"
    }
  },
  "beacon_previous_justified_root_created": {
    "doc": {
      "nimbus": ""
    },
    "labels": {
      "nimbus": {}
    },
    "type": {
      "nimbus": "unknown"
    }
  },
  "beacon_previous_live_validators": {
    "doc": {
      "nimbus": "Number of active validators that successfully included attestation on chain for previous epoch",
      "teku": "Number of active validators that successfully included attestation on chain for previous epoch"
    },
    "labels": {
      "nimbus": {},
      "teku": {}
    },
    "type": {
      "nimbus": "gauge",
      "teku": "gauge"
    }
  },
  "beacon_previous_live_validators_created": {
    "doc": {
      "nimbus": ""
    },
    "labels": {
      "nimbus": {}
    },
    "type": {
      "nimbus": "unknown"
    }
  },
  "beacon_previous_validators": {
    "doc": {
      "nimbus": "Number of status=\"pending|active|exited|withdrawable\" validators in previous epoch"
    },
    "labels": {
      "nimbus": {}
    },
    "type": {
      "nimbus": "gauge"
    }
  },
  "beacon_previous_validators_created": {
    "doc": {
      "nimbus": ""
    },
    "labels": {
      "nimbus": {}
    },
    "type": {
      "nimbus": "unknown"
    }
  },
  "beacon_processed_deposits_total": {
    "doc": {
      "nimbus": "Number of total deposits included on chain"
    },
    "labels": {
      "nimbus": {}
    },
    "type": {
      "nimbus": "gauge"
    }
  },
  "beacon_processed_deposits_total_created": {
    "doc": {
      "nimbus": ""
    },
    "labels": {
      "nimbus": {}
    },
    "type": {
      "nimbus": "unknown"
    }
  },
  "beacon_published_attestation": {
    "doc": {
      "teku": "Total number of attestations sent to the gossip network"
    },
    "labels": {
      "teku": {
        "result": [
          "failure"
        ]
      }
    },
    "type": {
      "teku": "counter"
    }
  },
  "beacon_reorg": {
    "doc": {
      "prysm": "Count the number of times beacon chain has a reorg"
    },
    "labels": {
      "prysm": {}
    },
    "type": {
      "prysm": "counter"
    }
  },
  "beacon_reorgs": {
    "doc": {
      "nimbus": "Total occurrences of reorganizations of the chain",
      "teku": "Total occurrences of reorganizations of the chain"
    },
    "labels": {
      "nimbus": {},
      "teku": {}
    },
    "type": {
      "nimbus": "counter",
      "teku": "counter"
    }
  },
  "beacon_reorgs_total_created": {
    "doc": {
      "nimbus": ""
    },
    "labels": {
      "nimbus": {}
    },
    "type": {
      "nimbus": "unknown"
    }
  },
  "beacon_reorgs_total_total": {
    "doc": {
      "nimbus": ""
    },
    "labels": {
      "nimbus": {}
    },
    "type": {
      "nimbus": "unknown"
    }
  },
  "beacon_shuffling_cache_hits": {
    "doc": {
      "lighthouse": "Count of times shuffling cache fulfils request"
    },
    "labels": {
      "lighthouse": {}
    },
    "type": {
      "lighthouse": "counter"
    }
  },
  "beacon_shuffling_cache_misses": {
    "doc": {
      "lighthouse": "Count of times shuffling cache fulfils request"
    },
    "labels": {
      "lighthouse": {}
    },
    "type": {
      "lighthouse": "counter"
    }
  },
  "beacon_slot": {
    "doc": {
      "nimbus": "Latest slot of the beacon chain state",
      "prysm": "Latest slot of the beacon chain state",
      "teku": "Latest slot recorded by the beacon chain"
    },
    "labels": {
      "nimbus": {},
      "prysm": {},
      "teku": {}
    },
    "type": {
      "nimbus": "gauge",
      "prysm": "gauge",
      "teku": "gauge"
    }
  },
  "beacon_slot_created": {
    "doc": {
      "nimbus": ""
    },
    "labels": {
      "nimbus": {}
    },
    "type": {
      "nimbus": "unknown"
    }
  },
  "beacon_state_data_cache_hits": {
    "doc": {
      "nimbus": "dag.cachedStates hits"
    },
    "labels": {
      "nimbus": {}
    },
    "type": {
      "nimbus": "counter"
    }
  },
  "beacon_state_data_cache_hits_created": {
    "doc": {
      "nimbus": ""
    },
    "labels": {
      "nimbus": {}
    },
    "type": {
      "nimbus": "unknown"
    }
  },
  "beacon_state_data_cache_hits_total": {
    "doc": {
      "nimbus": ""
    },
    "labels": {
      "nimbus": {}
    },
    "type": {
      "nimbus": "unknown"
    }
  },
  "beacon_state_data_cache_misses": {
    "doc": {
      "nimbus": "dag.cachedStates misses"
    },
    "labels": {
      "nimbus": {}
    },
    "type": {
      "nimbus": "counter"
    }
  },
  "beacon_state_data_cache_misses_created": {
    "doc": {
      "nimbus": ""
    },
    "labels": {
      "nimbus": {}
    },
    "type": {
      "nimbus": "unknown"
    }
  },
  "beacon_state_data_cache_misses_total": {
    "doc": {
      "nimbus": ""
    },
    "labels": {
      "nimbus": {}
    },
    "type": {
      "nimbus": "unknown"
    }
  },
  "beacon_unaggregated_attestation_gossip_verification_seconds": {
    "doc": {
      "lighthouse": "Full runtime of aggregated attestation gossip verification"
    },
    "labels": {
      "lighthouse": {
        "le": [
          "0.005",
          "0.01",
          "0.025",
          "0.05",
          "0.1",
          "0.25",
          "0.5",
          "1",
          "2.5",
          "5",
          "10",
          "+Inf"
        ]
      }
    },
    "type": {
      "lighthouse": "histogram"
    }
  },
  "beacon_unaggregated_attestation_processing_requests": {
    "doc": {
      "lighthouse": "Count of all unaggregated attestations submitted for processing"
    },
    "labels": {
      "lighthouse": {}
    },
    "type": {
      "lighthouse": "counter"
    }
  },
  "beacon_unaggregated_attestation_processing_successes": {
    "doc": {
      "lighthouse": "Number of unaggregated attestations verified for gossip"
    },
    "labels": {
      "lighthouse": {}
    },
    "type": {
      "lighthouse": "counter"
    }
  },
  "beacon_update_head_seconds": {
    "doc": {
      "lighthouse": "Time taken to update the canonical head"
    },
    "labels": {
      "lighthouse": {
        "le": [
          "0.005",
          "0.01",
          "0.025",
          "0.05",
          "0.1",
          "0.25",
          "0.5",
          "1",
          "2.5",
          "5",
          "10",
          "+Inf"
        ]
      }
    },
    "type": {
      "lighthouse": "histogram"
    }
  },
  "beaconchain_current_epoch_live_validators": {
    "doc": {
      "lodestar": "number of active validators in current epoch"
    },
    "labels": {
      "lodestar": {}
    },
    "type": {
      "lodestar": "gauge"
    }
  },
  "beaconchain_current_finalized_epoch": {
    "doc": {
      "lodestar": "current finalized epoch"
    },
    "labels": {
      "lodestar": {}
    },
    "type": {
      "lodestar": "gauge"
    }
  },
  "beaconchain_current_justified_epoch": {
    "doc": {
      "lodestar": "current justified epoch"
    },
    "labels": {
      "lodestar": {}
    },
    "type": {
      "lodestar": "gauge"
    }
  },
  "beaconchain_current_prev_justified_epoch": {
    "doc": {
      "lodestar": "previous justified epoch"
    },
    "labels": {
      "lodestar": {}
    },
    "type": {
      "lodestar": "gauge"
    }
  },
  "beaconchain_current_slot": {
    "doc": {
      "lodestar": "latest slot"
    },
    "labels": {
      "lodestar": {}
    },
    "type": {
      "lodestar": "gauge"
    }
  },
  "beaconchain_peers": {
    "doc": {
      "lodestar": "number of connected peers"
    },
    "labels": {
      "lodestar": {}
    },
    "type": {
      "lodestar": "gauge"
    }
  },
  "beaconchain_pending_deposits": {
    "doc": {
      "lodestar": "number of pending deposits"
    },
    "labels": {
      "lodestar": {}
    },
    "type": {
      "lodestar": "gauge"
    }
  },
  "beaconchain_pending_exits": {
    "doc": {
      "lodestar": "number of pending voluntary exits"
    },
    "labels": {
      "lodestar": {}
    },
    "type": {
      "lodestar": "gauge"
    }
  },
  "beaconchain_previous_epoch_live_validators": {
    "doc": {
      "lodestar": "number of active validators in previous epoch"
    },
    "labels": {
      "lodestar": {}
    },
    "type": {
      "lodestar": "gauge"
    }
  },
  "beaconchain_previous_epoch_stale_blocks": {
    "doc": {
      "lodestar": "number of blocks not included into the chain in previous epoch"
    },
    "labels": {
      "lodestar": {}
    },
    "type": {
      "lodestar": "gauge"
    }
  },
  "beaconchain_propagated_attestations": {
    "doc": {
      "lodestar": "number of distinct attestations received"
    },
    "labels": {
      "lodestar": {}
    },
    "type": {
      "lodestar": "gauge"
    }
  },
  "beaconchain_reorg_events": {
    "doc": {
      "lodestar": "number of chain reorganizations"
    },
    "labels": {
      "lodestar": {}
    },
    "type": {
      "lodestar": "counter"
    }
  },
  "beaconchain_total_deposits": {
    "doc": {
      "lodestar": "number of total deposits"
    },
    "labels": {
      "lodestar": {}
    },
    "type": {
      "lodestar": "gauge"
    }
  },
  "beacondb_all_deposits": {
    "doc": {
      "prysm": "The number of total deposits in the beaconDB in-memory database"
    },
    "labels": {
      "prysm": {}
    },
    "type": {
      "prysm": "counter"
    }
  },
  "beacondb_pending_deposits": {
    "doc": {
      "prysm": "The number of pending deposits in the beaconDB in-memory database"
    },
    "labels": {
      "prysm": {}
    },
    "type": {
      "prysm": "gauge"
    }
  },
  "block_arrival_latency_milliseconds": {
    "doc": {
      "prysm": "Captures blocks propagation time. Blocks arrival in milliseconds distribution"
    },
    "labels": {
      "prysm": {
        "le": [
          "1000",
          "2000",
          "3000",
          "4000",
          "5000",
          "6000",
          "+Inf"
        ]
      }
    },
    "type": {
      "prysm": "histogram"
    }
  },
  "block_sent_latency_milliseconds": {
    "doc": {
      "prysm": "Captures blocks broadcast time. Blocks sent in milliseconds distribution"
    },
    "labels": {
      "prysm": {
        "le": [
          "1000",
          "2000",
          "3000",
          "4000",
          "5000",
          "6000",
          "+Inf"
        ]
      }
    },
    "type": {
      "prysm": "histogram"
    }
  },
  "bolt_bucket_buckets": {
    "doc": {
      "prysm": "Number of buckets within a bucket, including the top bucket."
    },
    "labels": {
      "prysm": {
        "bucket": [
          "archived-active-changes",
          "state"
        ],
        "database": [
          "boltDB"
        ]
      }
    },
    "type": {
      "prysm": "gauge"
    }
  },
  "bolt_bucket_depth": {
    "doc": {
      "prysm": "Number of levels in B+ tree for a bucket."
    },
    "labels": {
      "prysm": {
        "bucket": [
          "archived-active-changes",
          "state"
        ],
        "database": [
          "boltDB"
        ]
      }
    },
    "type": {
      "prysm": "gauge"
    }
  },
  "bolt_bucket_inlined_buckets": {
    "doc": {
      "prysm": "Number of inlined buckets for a bucket."
    },
    "labels": {
      "prysm": {
        "bucket": [
          "archived-active-changes",
          "state"
        ],
        "database": [
          "boltDB"
        ]
      }
    },
    "type": {
      "prysm": "gauge"
    }
  },
  "bolt_bucket_inlined_buckets_in_use_bytes": {
    "doc": {
      "prysm": "Number of bytes in use for inlined buckets."
    },
    "labels": {
      "prysm": {
        "bucket": [
          "archived-active-changes",
          "state"
        ],
        "database": [
          "boltDB"
        ]
      }
    },
    "type": {
      "prysm": "gauge"
    }
  },
  "bolt_bucket_keys": {
    "doc": {
      "prysm": "Number of key/value pairs in a bucket."
    },
    "labels": {
      "prysm": {
        "bucket": [
          "archived-active-changes",
          "state"
        ],
        "database": [
          "boltDB"
        ]
      }
    },
    "type": {
      "prysm": "gauge"
    }
  },
  "bolt_bucket_logical_branch_pages": {
    "doc": {
      "prysm": "Number of logical branch pages for a bucket."
    },
    "labels": {
      "prysm": {
        "bucket": [
          "archived-active-changes",
          "state"
        ],
        "database": [
          "boltDB"
        ]
      }
    },
    "type": {
      "prysm": "gauge"
    }
  },
  "bolt_bucket_logical_leaf_pages": {
    "doc": {
      "prysm": "Number of logical leaf pages for a bucket."
    },
    "labels": {
      "prysm": {
        "bucket": [
          "archived-active-changes",
          "state"
        ],
        "database": [
          "boltDB"
        ]
      }
    },
    "type": {
      "prysm": "gauge"
    }
  },
  "bolt_bucket_physical_branch_overflow_pages": {
    "doc": {
      "prysm": "Number of physical branch overflow pages for a bucket."
    },
    "labels": {
      "prysm": {
        "bucket": [
          "archived-active-changes",
          "state"
        ],
        "database": [
          "boltDB"
        ]
      }
    },
    "type": {
      "prysm": "gauge"
    }
  },
  "bolt_bucket_physical_branch_pages_allocated_bytes": {
    "doc": {
      "prysm": "Number of bytes allocated in physical branch pages for a bucket."
    },
    "labels": {
      "prysm": {
        "bucket": [
          "archived-active-changes",
          "state"
        ],
        "database": [
          "boltDB"
        ]
      }
    },
    "type": {
      "prysm": "gauge"
    }
  },
  "bolt_bucket_physical_branch_pages_in_use_bytes": {
    "doc": {
      "prysm": "Number of bytes in use in physical branch pages for a bucket."
    },
    "labels": {
      "prysm": {
        "bucket": [
          "archived-active-changes",
          "state"
        ],
        "database": [
          "boltDB"
        ]
      }
    },
    "type": {
      "prysm": "gauge"
    }
  },
  "bolt_bucket_physical_leaf_overflow_pages": {
    "doc": {
      "prysm": "Number of physical leaf overflow pages for a bucket."
    },
    "labels": {
      "prysm": {
        "bucket": [
          "archived-active-changes",
          "state"
        ],
        "database": [
          "boltDB"
        ]
      }
    },
    "type": {
      "prysm": "gauge"
    }
  },
  "bolt_bucket_physical_leaf_pages_allocated_bytes": {
    "doc": {
      "prysm": "Number of bytes allocated in physical leaf pages for a bucket."
    },
    "labels": {
      "prysm": {
        "bucket": [
          "archived-active-changes",
          "state"
        ],
        "database": [
          "boltDB"
        ]
      }
    },
    "type": {
      "prysm": "gauge"
    }
  },
  "bolt_bucket_physical_leaf_pages_in_use_bytes": {
    "doc": {
      "prysm": "Number of bytes in use in physical leaf pages for a bucket."
    },
    "labels": {
      "prysm": {
        "bucket": [
          "archived-active-changes",
          "state"
        ],
        "database": [
          "boltDB"
        ]
      }
    },
    "type": {
      "prysm": "gauge"
    }
  },
  "bolt_db_freelist_free_page_allocated_bytes": {
    "doc": {
      "prysm": "Number of bytes allocated in free pages on the freelist."
    },
    "labels": {
      "prysm": {
        "database": [
          "boltDB"
        ]
      }
    },
    "type": {
      "prysm": "gauge"
    }
  },
  "bolt_db_freelist_free_pages": {
    "doc": {
      "prysm": "Number of free pages on the freelist."
    },
    "labels": {
      "prysm": {
        "database": [
          "boltDB"
        ]
      }
    },
    "type": {
      "prysm": "gauge"
    }
  },
  "bolt_db_freelist_in_use_bytes": {
    "doc": {
      "prysm": "Number of bytes in use by the freelist."
    },
    "labels": {
      "prysm": {
        "database": [
          "boltDB"
        ]
      }
    },
    "type": {
      "prysm": "gauge"
    }
  },
  "bolt_db_freelist_pending_pages": {
    "doc": {
      "prysm": "Number of pending pages on the freelist."
    },
    "labels": {
      "prysm": {
        "database": [
          "boltDB"
        ]
      }
    },
    "type": {
      "prysm": "gauge"
    }
  },
  "bolt_db_open_read_tx": {
    "doc": {
      "prysm": "Number of currently open read-only transactions for the database."
    },
    "labels": {
      "prysm": {
        "database": [
          "boltDB"
        ]
      }
    },
    "type": {
      "prysm": "gauge"
    }
  },
  "bolt_db_read_tx": {
    "doc": {
      "prysm": "Total number of started read transactions for the database."
    },
    "labels": {
      "prysm": {
        "database": [
          "boltDB"
        ]
      }
    },
    "type": {
      "prysm": "counter"
    }
  },
  "bolt_tx_cursors": {
    "doc": {
      "prysm": "Total number of cursors created by transactions"
    },
    "labels": {
      "prysm": {
        "database": [
          "boltDB"
        ]
      }
    },
    "type": {
      "prysm": "counter"
    }
  },
  "bolt_tx_node_rebalance_seconds": {
    "doc": {
      "prysm": "Total amount of time in seconds spent rebalancing nodes by transactions"
    },
    "labels": {
      "prysm": {
        "database": [
          "boltDB"
        ]
      }
    },
    "type": {
      "prysm": "counter"
    }
  },
  "bolt_tx_node_rebalances": {
    "doc": {
      "prysm": "Total number of node rebalances by transactions."
    },
    "labels": {
      "prysm": {
        "database": [
          "boltDB"
        ]
      }
    },
    "type": {
      "prysm": "counter"
    }
  },
  "bolt_tx_nodes_allocated": {
    "doc": {
      "prysm": "Total number of nodes allocated by transactions."
    },
    "labels": {
      "prysm": {
        "database": [
          "boltDB"
        ]
      }
    },
    "type": {
      "prysm": "counter"
    }
  },
  "bolt_tx_nodes_dereferenced": {
    "doc": {
      "prysm": "Total number of nodes dereferenced by transactions."
    },
    "labels": {
      "prysm": {
        "database": [
          "boltDB"
        ]
      }
    },
    "type": {
      "prysm": "counter"
    }
  },
  "bolt_tx_nodes_spilled": {
    "doc": {
      "prysm": "Total number of nodes spilled by transactions."
    },
    "labels": {
      "prysm": {
        "database": [
          "boltDB"
        ]
      }
    },
    "type": {
      "prysm": "counter"
    }
  },
  "bolt_tx_nodes_spilled_seconds": {
    "doc": {
      "prysm": "Total amount of time in seconds spent spilling nodes by transactions."
    },
    "labels": {
      "prysm": {
        "database": [
          "boltDB"
        ]
      }
    },
    "type": {
      "prysm": "counter"
    }
  },
  "bolt_tx_nodes_split": {
    "doc": {
      "prysm": "Total number of nodes split by transactions."
    },
    "labels": {
      "prysm": {
        "database": [
          "boltDB"
        ]
      }
    },
    "type": {
      "prysm": "counter"
    }
  },
  "bolt_tx_pages_allocated": {
    "doc": {
      "prysm": "Total number of transaction page allocations."
    },
    "labels": {
      "prysm": {
        "database": [
          "boltDB"
        ]
      }
    },
    "type": {
      "prysm": "counter"
    }
  },
  "bolt_tx_pages_allocated_bytes": {
    "doc": {
      "prysm": "Total number of bytes allocated for transaction pages."
    },
    "labels": {
      "prysm": {
        "database": [
          "boltDB"
        ]
      }
    },
    "type": {
      "prysm": "counter"
    }
  },
  "bolt_tx_write_seconds": {
    "doc": {
      "prysm": "Total amount of time in seconds spent writing to disk by transactions."
    },
    "labels": {
      "prysm": {
        "database": [
          "boltDB"
        ]
      }
    },
    "type": {
      "prysm": "counter"
    }
  },
  "bolt_tx_writes": {
    "doc": {
      "prysm": "Total number of writes to disk performed by transactions."
    },
    "labels": {
      "prysm": {
        "database": [
          "boltDB"
        ]
      }
    },
    "type": {
      "prysm": "counter"
    }
  },
  "check_point_state_cache_hit": {
    "doc": {
      "prysm": "The number of check point state requests that are present in the cache."
    },
    "labels": {
      "prysm": {}
    },
    "type": {
      "prysm": "counter"
    }
  },
  "check_point_statecache_miss": {
    "doc": {
      "prysm": "The number of check point state requests that aren't present in the cache."
    },
    "labels": {
      "prysm": {}
    },
    "type": {
      "prysm": "counter"
    }
  },
  "committee_cache_hit": {
    "doc": {
      "prysm": "The number of committee requests that are present in the cache."
    },
    "labels": {
      "prysm": {}
    },
    "type": {
      "prysm": "counter"
    }
  },
  "committee_cache_miss": {
    "doc": {
      "prysm": "The number of committee requests that aren't present in the cache."
    },
    "labels": {
      "prysm": {}
    },
    "type": {
      "prysm": "counter"
    }
  },
  "connected_peers": {
    "doc": {
      "nimbus": "number of peers in the pool"
    },
    "labels": {
      "nimbus": {}
    },
    "type": {
      "nimbus": "gauge"
    }
  },
  "connected_peers_created": {
    "doc": {
      "nimbus": ""
    },
    "labels": {
      "nimbus": {}
    },
    "type": {
      "nimbus": "unknown"
    }
  },
  "crit": {
    "doc": {
      "lighthouse": "Count of crits logged"
    },
    "labels": {
      "lighthouse": {}
    },
    "type": {
      "lighthouse": "counter"
    }
  },
  "current_eth1_data_deposit_count": {
    "doc": {
      "prysm": "The current eth1 deposit count in the last processed state eth1data field."
    },
    "labels": {
      "prysm": {}
    },
    "type": {
      "prysm": "gauge"
    }
  },
  "discovery_queue_size": {
    "doc": {
      "lighthouse": "The number of discovery queries awaiting execution"
    },
    "labels": {
      "lighthouse": {}
    },
    "type": {
      "lighthouse": "gauge"
    }
  },
  "discovery_reqs_per_ip": {
    "doc": {
      "lighthouse": "Unsolicited discovery requests per ip per second"
    },
    "labels": {
      "lighthouse": {
        "Addresses": [
          "V4(118.169.44.253)"
        ]
      }
    },
    "type": {
      "lighthouse": "gauge"
    }
  },
  "discovery_requests": {
    "doc": {
      "lighthouse": "The number of unsolicited discovery requests per second"
    },
    "labels": {
      "lighthouse": {}
    },
    "type": {
      "lighthouse": "gauge"
    }
  },
  "discovery_sessions": {
    "doc": {
      "lighthouse": "The number of active discovery sessions with peers"
    },
    "labels": {
      "lighthouse": {}
    },
    "type": {
      "lighthouse": "gauge"
    }
  },
  "epoch_transition_final_updates": {
    "doc": {
      "nimbus": "Epoch transition final updates time"
    },
    "labels": {
      "nimbus": {}
    },
    "type": {
      "nimbus": "gauge"
    }
  },
  "epoch_transition_final_updates_created": {
    "doc": {
      "nimbus": ""
    },
    "labels": {
      "nimbus": {}
    },
    "type": {
      "nimbus": "unknown"
    }
  },
  "epoch_transition_justification_and_finalization": {
    "doc": {
      "nimbus": "Epoch transition justification and finalization time"
    },
    "labels": {
      "nimbus": {}
    },
    "type": {
      "nimbus": "gauge"
    }
  },
  "epoch_transition_justification_and_finalization_created": {
    "doc": {
      "nimbus": ""
    },
    "labels": {
      "nimbus": {}
    },
    "type": {
      "nimbus": "unknown"
    }
  },
  "epoch_transition_registry_updates": {
    "doc": {
      "nimbus": "Epoch transition registry updates time"
    },
    "labels": {
      "nimbus": {}
    },
    "type": {
      "nimbus": "gauge"
    }
  },
  "epoch_transition_registry_updates_created": {
    "doc": {
      "nimbus": ""
    },
    "labels": {
      "nimbus": {}
    },
    "type": {
      "nimbus": "unknown"
    }
  },
  "epoch_transition_slashings": {
    "doc": {
      "nimbus": "Epoch transition slashings time"
    },
    "labels": {
      "nimbus": {}
    },
    "type": {
      "nimbus": "gauge"
    }
  },
  "epoch_transition_slashings_created": {
    "doc": {
      "nimbus": ""
    },
    "labels": {
      "nimbus": {}
    },
    "type": {
      "nimbus": "unknown"
    }
  },
  "epoch_transition_times_rewards_and_penalties": {
    "doc": {
      "nimbus": "Epoch transition reward and penalty time"
    },
    "labels": {
      "nimbus": {}
    },
    "type": {
      "nimbus": "gauge"
    }
  },
  "epoch_transition_times_rewards_and_penalties_created": {
    "doc": {
      "nimbus": ""
    },
    "labels": {
      "nimbus": {}
    },
    "type": {
      "nimbus": "unknown"
    }
  },
  "error": {
    "doc": {
      "lighthouse": "Count of errors logged"
    },
    "labels": {
      "lighthouse": {}
    },
    "type": {
      "lighthouse": "counter"
    }
  },
  "eth1_block_cache_len": {
    "doc": {
      "lighthouse": "Count of eth1 blocks in cache"
    },
    "labels": {
      "lighthouse": {}
    },
    "type": {
      "lighthouse": "gauge"
    }
  },
  "eth1_deposit_cache_len": {
    "doc": {
      "lighthouse": "Number of deposits in the eth1 cache"
    },
    "labels": {
      "lighthouse": {}
    },
    "type": {
      "lighthouse": "gauge"
    }
  },
  "eth1_highest_processed_deposit_block": {
    "doc": {
      "lighthouse": "Number of the last block checked for deposits"
    },
    "labels": {
      "lighthouse": {}
    },
    "type": {
      "lighthouse": "gauge"
    }
  },
  "eth1_latest_cached_block_timestamp": {
    "doc": {
      "lighthouse": "Timestamp of latest block in eth1 cache"
    },
    "labels": {
      "lighthouse": {}
    },
    "type": {
      "lighthouse": "gauge"
    }
  },
  "eventbus_event_consumed_count": {
    "doc": {
      "teku": "Total number of events consumed"
    },
    "labels": {
      "teku": {
        "channel": [
          "SlotEventsChannel"
        ],
        "subscriber": [
          "AttestationTopicSubscriber"
        ]
      }
    },
    "type": {
      "teku": "counter"
    }
  },
  "eventbus_event_failed_count": {
    "doc": {
      "teku": "Number of events which failed to be processed"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "counter"
    }
  },
  "eventbus_event_published_count": {
    "doc": {
      "teku": "Total number of events published"
    },
    "labels": {
      "teku": {
        "channel": [
          "StorageQueryChannel"
        ]
      }
    },
    "type": {
      "teku": "counter"
    }
  },
  "executor_beaconchain_queue_size": {
    "doc": {
      "teku": "Current size of the executor task queue"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "executor_beaconchain_thread_active_count": {
    "doc": {
      "teku": "Current number of threads executing tasks for this executor"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "executor_beaconchain_thread_pool_size": {
    "doc": {
      "teku": "Current number of threads in the executor thread pool"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "executor_p2p_queue_size": {
    "doc": {
      "teku": "Current size of the executor task queue"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "executor_p2p_thread_active_count": {
    "doc": {
      "teku": "Current number of threads executing tasks for this executor"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "executor_p2p_thread_pool_size": {
    "doc": {
      "teku": "Current number of threads in the executor thread pool"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "executor_powchain_queue_size": {
    "doc": {
      "teku": "Current size of the executor task queue"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "executor_powchain_thread_active_count": {
    "doc": {
      "teku": "Current number of threads executing tasks for this executor"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "executor_powchain_thread_pool_size": {
    "doc": {
      "teku": "Current number of threads in the executor thread pool"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "executor_validator_queue_size": {
    "doc": {
      "teku": "Current size of the executor task queue"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "executor_validator_thread_active_count": {
    "doc": {
      "teku": "Current number of threads executing tasks for this executor"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "executor_validator_thread_pool_size": {
    "doc": {
      "teku": "Current number of threads in the executor thread pool"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "expired_aggregated_atts": {
    "doc": {
      "prysm": "The number of expired and deleted aggregated attestations in the pool."
    },
    "labels": {
      "prysm": {}
    },
    "type": {
      "prysm": "counter"
    }
  },
  "expired_block_atts": {
    "doc": {
      "prysm": "The number of expired and deleted block attestations in the pool."
    },
    "labels": {
      "prysm": {}
    },
    "type": {
      "prysm": "counter"
    }
  },
  "expired_unaggregated_atts": {
    "doc": {
      "prysm": "The number of expired and deleted unaggregated attestations in the pool."
    },
    "labels": {
      "prysm": {}
    },
    "type": {
      "prysm": "counter"
    }
  },
  "go_gc_duration_seconds": {
    "doc": {
      "prysm": "A summary of the pause duration of garbage collection cycles."
    },
    "labels": {
      "prysm": {
        "quantile": [
          "0",
          "0.25",
          "0.5",
          "0.75",
          "1"
        ]
      }
    },
    "type": {
      "prysm": "summary"
    }
  },
  "go_goroutines": {
    "doc": {
      "prysm": "Number of goroutines that currently exist."
    },
    "labels": {
      "prysm": {}
    },
    "type": {
      "prysm": "gauge"
    }
  },
  "go_info": {
    "doc": {
      "prysm": "Information about the Go environment."
    },
    "labels": {
      "prysm": {
        "version": [
          "go1.14.2"
        ]
      }
    },
    "type": {
      "prysm": "gauge"
    }
  },
  "go_maxprocs": {
    "doc": {
      "prysm": "The result of runtime.GOMAXPROCS(0)"
    },
    "labels": {
      "prysm": {}
    },
    "type": {
      "prysm": "gauge"
    }
  },
  "go_memstats_alloc_bytes": {
    "doc": {
      "prysm": "Total number of bytes allocated, even if freed."
    },
    "labels": {
      "prysm": {}
    },
    "type": {
      "prysm": "counter"
    }
  },
  "go_memstats_buck_hash_sys_bytes": {
    "doc": {
      "prysm": "Number of bytes used by the profiling bucket hash table."
    },
    "labels": {
      "prysm": {}
    },
    "type": {
      "prysm": "gauge"
    }
  },
  "go_memstats_frees": {
    "doc": {
      "prysm": "Total number of frees."
    },
    "labels": {
      "prysm": {}
    },
    "type": {
      "prysm": "counter"
    }
  },
  "go_memstats_gc_cpu_fraction": {
    "doc": {
      "prysm": "The fraction of this program's available CPU time used by the GC since the program started."
    },
    "labels": {
      "prysm": {}
    },
    "type": {
      "prysm": "gauge"
    }
  },
  "go_memstats_gc_sys_bytes": {
    "doc": {
      "prysm": "Number of bytes used for garbage collection system metadata."
    },
    "labels": {
      "prysm": {}
    },
    "type": {
      "prysm": "gauge"
    }
  },
  "go_memstats_heap_alloc_bytes": {
    "doc": {
      "prysm": "Number of heap bytes allocated and still in use."
    },
    "labels": {
      "prysm": {}
    },
    "type": {
      "prysm": "gauge"
    }
  },
  "go_memstats_heap_idle_bytes": {
    "doc": {
      "prysm": "Number of heap bytes waiting to be used."
    },
    "labels": {
      "prysm": {}
    },
    "type": {
      "prysm": "gauge"
    }
  },
  "go_memstats_heap_inuse_bytes": {
    "doc": {
      "prysm": "Number of heap bytes that are in use."
    },
    "labels": {
      "prysm": {}
    },
    "type": {
      "prysm": "gauge"
    }
  },
  "go_memstats_heap_objects": {
    "doc": {
      "prysm": "Number of allocated objects."
    },
    "labels": {
      "prysm": {}
    },
    "type": {
      "prysm": "gauge"
    }
  },
  "go_memstats_heap_released_bytes": {
    "doc": {
      "prysm": "Number of heap bytes released to OS."
    },
    "labels": {
      "prysm": {}
    },
    "type": {
      "prysm": "gauge"
    }
  },
  "go_memstats_heap_sys_bytes": {
    "doc": {
      "prysm": "Number of heap bytes obtained from system."
    },
    "labels": {
      "prysm": {}
    },
    "type": {
      "prysm": "gauge"
    }
  },
  "go_memstats_last_gc_time_seconds": {
    "doc": {
      "prysm": "Number of seconds since 1970 of last garbage collection."
    },
    "labels": {
      "prysm": {}
    },
    "type": {
      "prysm": "gauge"
    }
  },
  "go_memstats_lookups": {
    "doc": {
      "prysm": "Total number of pointer lookups."
    },
    "labels": {
      "prysm": {}
    },
    "type": {
      "prysm": "counter"
    }
  },
  "go_memstats_mallocs": {
    "doc": {
      "prysm": "Total number of mallocs."
    },
    "labels": {
      "prysm": {}
    },
    "type": {
      "prysm": "counter"
    }
  },
  "go_memstats_mcache_inuse_bytes": {
    "doc": {
      "prysm": "Number of bytes in use by mcache structures."
    },
    "labels": {
      "prysm": {}
    },
    "type": {
      "prysm": "gauge"
    }
  },
  "go_memstats_mcache_sys_bytes": {
    "doc": {
      "prysm": "Number of bytes used for mcache structures obtained from system."
    },
    "labels": {
      "prysm": {}
    },
    "type": {
      "prysm": "gauge"
    }
  },
  "go_memstats_mspan_inuse_bytes": {
    "doc": {
      "prysm": "Number of bytes in use by mspan structures."
    },
    "labels": {
      "prysm": {}
    },
    "type": {
      "prysm": "gauge"
    }
  },
  "go_memstats_mspan_sys_bytes": {
    "doc": {
      "prysm": "Number of bytes used for mspan structures obtained from system."
    },
    "labels": {
      "prysm": {}
    },
    "type": {
      "prysm": "gauge"
    }
  },
  "go_memstats_next_gc_bytes": {
    "doc": {
      "prysm": "Number of heap bytes when next garbage collection will take place."
    },
    "labels": {
      "prysm": {}
    },
    "type": {
      "prysm": "gauge"
    }
  },
  "go_memstats_other_sys_bytes": {
    "doc": {
      "prysm": "Number of bytes used for other system allocations."
    },
    "labels": {
      "prysm": {}
    },
    "type": {
      "prysm": "gauge"
    }
  },
  "go_memstats_stack_inuse_bytes": {
    "doc": {
      "prysm": "Number of bytes in use by the stack allocator."
    },
    "labels": {
      "prysm": {}
    },
    "type": {
      "prysm": "gauge"
    }
  },
  "go_memstats_stack_sys_bytes": {
    "doc": {
      "prysm": "Number of bytes obtained from system for stack allocator."
    },
    "labels": {
      "prysm": {}
    },
    "type": {
      "prysm": "gauge"
    }
  },
  "go_memstats_sys_bytes": {
    "doc": {
      "prysm": "Number of bytes obtained from system."
    },
    "labels": {
      "prysm": {}
    },
    "type": {
      "prysm": "gauge"
    }
  },
  "go_threads": {
    "doc": {
      "prysm": "Number of OS threads created."
    },
    "labels": {
      "prysm": {}
    },
    "type": {
      "prysm": "gauge"
    }
  },
  "grpc_server_handled": {
    "doc": {
      "prysm": "Total number of RPCs completed on the server, regardless of success or failure."
    },
    "labels": {
      "prysm": {
        "grpc_code": [
          "OK"
        ],
        "grpc_method": [
          "AttestationPool"
        ],
        "grpc_service": [
          "ethereum.eth.v1alpha1.BeaconChain"
        ],
        "grpc_type": [
          "unary"
        ]
      }
    },
    "type": {
      "prysm": "counter"
    }
  },
  "grpc_server_handling_seconds": {
    "doc": {
      "prysm": "Histogram of response latency (seconds) of gRPC that had been application-level handled by the server."
    },
    "labels": {
      "prysm": {
        "grpc_method": [
          "AttestationPool"
        ],
        "grpc_service": [
          "ethereum.eth.v1alpha1.BeaconChain"
        ],
        "grpc_type": [
          "unary"
        ],
        "le": [
          "0.005",
          "0.01",
          "0.025",
          "0.05",
          "0.1",
          "0.25",
          "0.5",
          "1",
          "2.5",
          "5",
          "10",
          "+Inf"
        ]
      }
    },
    "type": {
      "prysm": "histogram"
    }
  },
  "grpc_server_msg_received": {
    "doc": {
      "prysm": "Total number of RPC stream messages received on the server."
    },
    "labels": {
      "prysm": {
        "grpc_method": [
          "AttestationPool"
        ],
        "grpc_service": [
          "ethereum.eth.v1alpha1.BeaconChain"
        ],
        "grpc_type": [
          "unary"
        ]
      }
    },
    "type": {
      "prysm": "counter"
    }
  },
  "grpc_server_msg_sent": {
    "doc": {
      "prysm": "Total number of gRPC stream messages sent by the server."
    },
    "labels": {
      "prysm": {
        "grpc_method": [
          "AttestationPool"
        ],
        "grpc_service": [
          "ethereum.eth.v1alpha1.BeaconChain"
        ],
        "grpc_type": [
          "unary"
        ]
      }
    },
    "type": {
      "prysm": "counter"
    }
  },
  "grpc_server_started": {
    "doc": {
      "prysm": "Total number of RPCs started on the server."
    },
    "labels": {
      "prysm": {
        "grpc_method": [
          "AttestationPool"
        ],
        "grpc_service": [
          "ethereum.eth.v1alpha1.BeaconChain"
        ],
        "grpc_type": [
          "unary"
        ]
      }
    },
    "type": {
      "prysm": "counter"
    }
  },
  "head_finalized_epoch": {
    "doc": {
      "prysm": "Last finalized epoch of the head state"
    },
    "labels": {
      "prysm": {}
    },
    "type": {
      "prysm": "gauge"
    }
  },
  "head_finalized_root": {
    "doc": {
      "prysm": "Last finalized root of the head state"
    },
    "labels": {
      "prysm": {}
    },
    "type": {
      "prysm": "gauge"
    }
  },
  "hot_state_cache_hit": {
    "doc": {
      "prysm": "The total number of cache hits on the hot state cache."
    },
    "labels": {
      "prysm": {}
    },
    "type": {
      "prysm": "counter"
    }
  },
  "hot_state_cache_miss": {
    "doc": {
      "prysm": "The total number of cache misses on the hot state cache."
    },
    "labels": {
      "prysm": {}
    },
    "type": {
      "prysm": "counter"
    }
  },
  "http_server_request": {
    "doc": {
      "lighthouse": "Total count of HTTP requests received"
    },
    "labels": {
      "lighthouse": {}
    },
    "type": {
      "lighthouse": "counter"
    }
  },
  "http_server_request_duration_seconds": {
    "doc": {
      "lighthouse": "Time taken to build a response to a HTTP request"
    },
    "labels": {
      "lighthouse": {
        "le": [
          "0.005",
          "0.01",
          "0.025",
          "0.05",
          "0.1",
          "0.25",
          "0.5",
          "1",
          "2.5",
          "5",
          "10",
          "+Inf"
        ]
      }
    },
    "type": {
      "lighthouse": "histogram"
    }
  },
  "http_server_success": {
    "doc": {
      "lighthouse": "Total count of HTTP 200 responses sent"
    },
    "labels": {
      "lighthouse": {}
    },
    "type": {
      "lighthouse": "counter"
    }
  },
  "http_server_validator_attestation_get_request_duration_seconds": {
    "doc": {
      "lighthouse": "Time taken to respond to GET /validator/attestation"
    },
    "labels": {
      "lighthouse": {
        "le": [
          "0.005",
          "0.01",
          "0.025",
          "0.05",
          "0.1",
          "0.25",
          "0.5",
          "1",
          "2.5",
          "5",
          "10",
          "+Inf"
        ]
      }
    },
    "type": {
      "lighthouse": "histogram"
    }
  },
  "http_server_validator_block_get_request_duration_seconds": {
    "doc": {
      "lighthouse": "Time taken to respond to GET /validator/block"
    },
    "labels": {
      "lighthouse": {
        "le": [
          "0.005",
          "0.01",
          "0.025",
          "0.05",
          "0.1",
          "0.25",
          "0.5",
          "1",
          "2.5",
          "5",
          "10",
          "+Inf"
        ]
      }
    },
    "type": {
      "lighthouse": "histogram"
    }
  },
  "http_server_validator_duties_get_request_duration_seconds": {
    "doc": {
      "lighthouse": "Time taken to respond to GET /validator/duties"
    },
    "labels": {
      "lighthouse": {
        "le": [
          "0.005",
          "0.01",
          "0.025",
          "0.05",
          "0.1",
          "0.25",
          "0.5",
          "1",
          "2.5",
          "5",
          "10",
          "+Inf"
        ]
      }
    },
    "type": {
      "lighthouse": "histogram"
    }
  },
  "info": {
    "doc": {
      "lighthouse": "Count of infos logged"
    },
    "labels": {
      "lighthouse": {}
    },
    "type": {
      "lighthouse": "counter"
    }
  },
  "infostream_eth1_blocktime_cache_hits": {
    "doc": {
      "prysm": "The number of times the infostream Ethereum 1 block time cache is hit."
    },
    "labels": {
      "prysm": {}
    },
    "type": {
      "prysm": "counter"
    }
  },
  "infostream_eth1_blocktime_cache_misses": {
    "doc": {
      "prysm": "The number of times the infostream Ethereum 1 block time cache is missed."
    },
    "labels": {
      "prysm": {}
    },
    "type": {
      "prysm": "counter"
    }
  },
  "infostream_eth1_deposit_cache_hits": {
    "doc": {
      "prysm": "The number of times the infostream Ethereum 1 deposit cache is hit."
    },
    "labels": {
      "prysm": {}
    },
    "type": {
      "prysm": "counter"
    }
  },
  "infostream_eth1_deposit_cache_misses": {
    "doc": {
      "prysm": "The number of times the infostream Ethereum 1 deposit cache is missed."
    },
    "labels": {
      "prysm": {}
    },
    "type": {
      "prysm": "counter"
    }
  },
  "jvm_buffer_pool_capacity_bytes": {
    "doc": {
      "teku": "Bytes capacity of a given JVM buffer pool."
    },
    "labels": {
      "teku": {
        "pool": [
          "mapped"
        ]
      }
    },
    "type": {
      "teku": "gauge"
    }
  },
  "jvm_buffer_pool_used_buffers": {
    "doc": {
      "teku": "Used buffers of a given JVM buffer pool."
    },
    "labels": {
      "teku": {
        "pool": [
          "mapped"
        ]
      }
    },
    "type": {
      "teku": "gauge"
    }
  },
  "jvm_buffer_pool_used_bytes": {
    "doc": {
      "teku": "Used bytes of a given JVM buffer pool."
    },
    "labels": {
      "teku": {
        "pool": [
          "mapped"
        ]
      }
    },
    "type": {
      "teku": "gauge"
    }
  },
  "jvm_classes_loaded": {
    "doc": {
      "teku": "The total number of classes that have been loaded since the JVM has started execution"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "counter"
    }
  },
  "jvm_classes_unloaded": {
    "doc": {
      "teku": "The total number of classes that have been unloaded since the JVM has started execution"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "counter"
    }
  },
  "jvm_gc_collection_seconds": {
    "doc": {
      "teku": "Time spent in a given JVM garbage collector in seconds."
    },
    "labels": {
      "teku": {
        "gc": [
          "G1 Young Generation"
        ]
      }
    },
    "type": {
      "teku": "summary"
    }
  },
  "jvm_memory_bytes_committed": {
    "doc": {
      "teku": "Committed (bytes) of a given JVM memory area."
    },
    "labels": {
      "teku": {
        "area": [
          "heap"
        ]
      }
    },
    "type": {
      "teku": "gauge"
    }
  },
  "jvm_memory_bytes_init": {
    "doc": {
      "teku": "Initial bytes of a given JVM memory area."
    },
    "labels": {
      "teku": {
        "area": [
          "heap"
        ]
      }
    },
    "type": {
      "teku": "gauge"
    }
  },
  "jvm_memory_bytes_max": {
    "doc": {
      "teku": "Max (bytes) of a given JVM memory area."
    },
    "labels": {
      "teku": {
        "area": [
          "heap"
        ]
      }
    },
    "type": {
      "teku": "gauge"
    }
  },
  "jvm_memory_bytes_used": {
    "doc": {
      "teku": "Used bytes of a given JVM memory area."
    },
    "labels": {
      "teku": {
        "area": [
          "heap"
        ]
      }
    },
    "type": {
      "teku": "gauge"
    }
  },
  "jvm_memory_pool_bytes_committed": {
    "doc": {
      "teku": "Committed bytes of a given JVM memory pool."
    },
    "labels": {
      "teku": {
        "pool": [
          "CodeHeap 'non-nmethods'"
        ]
      }
    },
    "type": {
      "teku": "gauge"
    }
  },
  "jvm_memory_pool_bytes_init": {
    "doc": {
      "teku": "Initial bytes of a given JVM memory pool."
    },
    "labels": {
      "teku": {
        "pool": [
          "CodeHeap 'non-nmethods'"
        ]
      }
    },
    "type": {
      "teku": "gauge"
    }
  },
  "jvm_memory_pool_bytes_max": {
    "doc": {
      "teku": "Max bytes of a given JVM memory pool."
    },
    "labels": {
      "teku": {
        "pool": [
          "CodeHeap 'non-nmethods'"
        ]
      }
    },
    "type": {
      "teku": "gauge"
    }
  },
  "jvm_memory_pool_bytes_used": {
    "doc": {
      "teku": "Used bytes of a given JVM memory pool."
    },
    "labels": {
      "teku": {
        "pool": [
          "CodeHeap 'non-nmethods'"
        ]
      }
    },
    "type": {
      "teku": "gauge"
    }
  },
  "jvm_threads_current": {
    "doc": {
      "teku": "Current thread count of a JVM"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "jvm_threads_daemon": {
    "doc": {
      "teku": "Daemon thread count of a JVM"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "jvm_threads_deadlocked": {
    "doc": {
      "teku": "Cycles of JVM-threads that are in deadlock waiting to acquire object monitors or ownable synchronizers"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "jvm_threads_deadlocked_monitor": {
    "doc": {
      "teku": "Cycles of JVM-threads that are in deadlock waiting to acquire object monitors"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "jvm_threads_peak": {
    "doc": {
      "teku": "Peak thread count of a JVM"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "jvm_threads_started": {
    "doc": {
      "teku": "Started thread count of a JVM"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "counter"
    }
  },
  "jvm_threads_state": {
    "doc": {
      "teku": "Current count of threads by state"
    },
    "labels": {
      "teku": {
        "state": [
          "TIMED_WAITING",
          "NEW"
        ]
      }
    },
    "type": {
      "teku": "gauge"
    }
  },
  "libp2p_dialed_peers": {
    "doc": {
      "nimbus": "dialed peers"
    },
    "labels": {
      "nimbus": {}
    },
    "type": {
      "nimbus": "counter"
    }
  },
  "libp2p_dialed_peers_created": {
    "doc": {
      "nimbus": ""
    },
    "labels": {
      "nimbus": {}
    },
    "type": {
      "nimbus": "unknown"
    }
  },
  "libp2p_dialed_peers_total": {
    "doc": {
      "nimbus": ""
    },
    "labels": {
      "nimbus": {}
    },
    "type": {
      "nimbus": "unknown"
    }
  },
  "libp2p_failed_dials": {
    "doc": {
      "nimbus": "failed dials"
    },
    "labels": {
      "nimbus": {}
    },
    "type": {
      "nimbus": "counter"
    }
  },
  "libp2p_failed_dials_created": {
    "doc": {
      "nimbus": ""
    },
    "labels": {
      "nimbus": {}
    },
    "type": {
      "nimbus": "unknown"
    }
  },
  "libp2p_failed_dials_total": {
    "doc": {
      "nimbus": ""
    },
    "labels": {
      "nimbus": {}
    },
    "type": {
      "nimbus": "unknown"
    }
  },
  "libp2p_failed_upgrade": {
    "doc": {
      "nimbus": "peers failed upgrade"
    },
    "labels": {
      "nimbus": {}
    },
    "type": {
      "nimbus": "counter"
    }
  },
  "libp2p_failed_upgrade_created": {
    "doc": {
      "nimbus": ""
    },
    "labels": {
      "nimbus": {}
    },
    "type": {
      "nimbus": "unknown"
    }
  },
  "libp2p_failed_upgrade_total": {
    "doc": {
      "nimbus": ""
    },
    "labels": {
      "nimbus": {}
    },
    "type": {
      "nimbus": "unknown"
    }
  },
  "libp2p_gossipsub_peers_per_topic_fanout": {
    "doc": {
      "nimbus": ""
    },
    "labels": {
      "nimbus": {
        "topic": [
          "/eth2/fdca39b0/beacon_block/ssz_snappy"
        ]
      }
    },
    "type": {
      "nimbus": "unknown"
    }
  },
  "libp2p_gossipsub_peers_per_topic_fanout_created": {
    "doc": {
      "nimbus": ""
    },
    "labels": {
      "nimbus": {
        "topic": [
          "/eth2/fdca39b0/beacon_block/ssz_snappy"
        ]
      }
    },
    "type": {
      "nimbus": "unknown"
    }
  },
  "libp2p_gossipsub_peers_per_topic_gossipsub": {
    "doc": {
      "nimbus": ""
    },
    "labels": {
      "nimbus": {
        "topic": [
          "/eth2/fdca39b0/beacon_block/ssz_snappy"
        ]
      }
    },
    "type": {
      "nimbus": "unknown"
    }
  },
  "libp2p_gossipsub_peers_per_topic_gossipsub_created": {
    "doc": {
      "nimbus": ""
    },
    "labels": {
      "nimbus": {
        "topic": [
          "/eth2/fdca39b0/beacon_block/ssz_snappy"
        ]
      }
    },
    "type": {
      "nimbus": "unknown"
    }
  },
  "libp2p_gossipsub_peers_per_topic_mesh": {
    "doc": {
      "nimbus": ""
    },
    "labels": {
      "nimbus": {
        "topic": [
          "/eth2/fdca39b0/beacon_block/ssz_snappy"
        ]
      }
    },
    "type": {
      "nimbus": "unknown"
    }
  },
  "libp2p_gossipsub_peers_per_topic_mesh_created": {
    "doc": {
      "nimbus": ""
    },
    "labels": {
      "nimbus": {
        "topic": [
          "/eth2/fdca39b0/beacon_block/ssz_snappy"
        ]
      }
    },
    "type": {
      "nimbus": "unknown"
    }
  },
  "libp2p_mplex_channels": {
    "doc": {
      "nimbus": ""
    },
    "labels": {
      "nimbus": {
        "initiator": [
          "true",
          "false"
        ],
        "peer": [
          "16Uiu2HAmKvyXP7YTcKfyKHfssLVQDKbCSEMSnf6RnAbwynuBmkE5"
        ]
      }
    },
    "type": {
      "nimbus": "unknown"
    }
  },
  "libp2p_mplex_channels_created": {
    "doc": {
      "nimbus": ""
    },
    "labels": {
      "nimbus": {
        "initiator": [
          "true",
          "false"
        ],
        "peer": [
          "16Uiu2HAmKvyXP7YTcKfyKHfssLVQDKbCSEMSnf6RnAbwynuBmkE5"
        ]
      }
    },
    "type": {
      "nimbus": "unknown"
    }
  },
  "libp2p_open_streams": {
    "doc": {
      "nimbus": ""
    },
    "labels": {
      "nimbus": {
        "type": [
          "ChronosStream"
        ]
      }
    },
    "type": {
      "nimbus": "unknown"
    }
  },
  "libp2p_open_streams_created": {
    "doc": {
      "nimbus": ""
    },
    "labels": {
      "nimbus": {
        "type": [
          "ChronosStream"
        ]
      }
    },
    "type": {
      "nimbus": "unknown"
    }
  },
  "libp2p_peer_connect_event": {
    "doc": {
      "lighthouse": "Count of libp2p peer connect events (not the current number of connected peers)"
    },
    "labels": {
      "lighthouse": {}
    },
    "type": {
      "lighthouse": "counter"
    }
  },
  "libp2p_peer_connected_peers_total": {
    "doc": {
      "lighthouse": "Count of libp2p peers currently connected"
    },
    "labels": {
      "lighthouse": {}
    },
    "type": {
      "lighthouse": "gauge"
    }
  },
  "libp2p_peer_disconnect_event": {
    "doc": {
      "lighthouse": "Count of libp2p peer disconnect events"
    },
    "labels": {
      "lighthouse": {}
    },
    "type": {
      "lighthouse": "counter"
    }
  },
  "libp2p_peers": {
    "doc": {
      "nimbus": "total connected peers",
      "teku": "Tracks number of libp2p peers"
    },
    "labels": {
      "nimbus": {},
      "teku": {}
    },
    "type": {
      "nimbus": "gauge",
      "teku": "gauge"
    }
  },
  "libp2p_peers_created": {
    "doc": {
      "nimbus": ""
    },
    "labels": {
      "nimbus": {}
    },
    "type": {
      "nimbus": "unknown"
    }
  },
  "libp2p_pubsub_messages_published": {
    "doc": {
      "nimbus": "published messages"
    },
    "labels": {
      "nimbus": {}
    },
    "type": {
      "nimbus": "counter"
    }
  },
  "libp2p_pubsub_messages_published_created": {
    "doc": {
      "nimbus": ""
    },
    "labels": {
      "nimbus": {
        "topic": [
          "/eth2/fdca39b0/beacon_attestation_27/ssz_snappy"
        ]
      }
    },
    "type": {
      "nimbus": "unknown"
    }
  },
  "libp2p_pubsub_messages_published_total": {
    "doc": {
      "nimbus": ""
    },
    "labels": {
      "nimbus": {
        "topic": [
          "/eth2/fdca39b0/beacon_attestation_27/ssz_snappy"
        ]
      }
    },
    "type": {
      "nimbus": "unknown"
    }
  },
  "libp2p_pubsub_peers": {
    "doc": {
      "nimbus": "pubsub peer instances"
    },
    "labels": {
      "nimbus": {}
    },
    "type": {
      "nimbus": "gauge"
    }
  },
  "libp2p_pubsub_peers_created": {
    "doc": {
      "nimbus": ""
    },
    "labels": {
      "nimbus": {}
    },
    "type": {
      "nimbus": "unknown"
    }
  },
  "libp2p_pubsub_received_messages": {
    "doc": {
      "nimbus": "number of messages received"
    },
    "labels": {
      "nimbus": {}
    },
    "type": {
      "nimbus": "counter"
    }
  },
  "libp2p_pubsub_received_messages_created": {
    "doc": {
      "nimbus": ""
    },
    "labels": {
      "nimbus": {
        "id": [
          "16Uiu2HAmKUXZzaRYJ21ENFiTcoWScUbbnq3wX23mkz616YybjcKN"
        ],
        "topic": [
          "/eth2/fdca39b0/beacon_aggregate_and_proof/ssz_snappy"
        ]
      }
    },
    "type": {
      "nimbus": "unknown"
    }
  },
  "libp2p_pubsub_received_messages_total": {
    "doc": {
      "nimbus": ""
    },
    "labels": {
      "nimbus": {
        "id": [
          "16Uiu2HAmKUXZzaRYJ21ENFiTcoWScUbbnq3wX23mkz616YybjcKN"
        ],
        "topic": [
          "/eth2/fdca39b0/beacon_aggregate_and_proof/ssz_snappy"
        ]
      }
    },
    "type": {
      "nimbus": "unknown"
    }
  },
  "libp2p_pubsub_sent_messages": {
    "doc": {
      "nimbus": "number of messages sent"
    },
    "labels": {
      "nimbus": {}
    },
    "type": {
      "nimbus": "counter"
    }
  },
  "libp2p_pubsub_sent_messages_created": {
    "doc": {
      "nimbus": ""
    },
    "labels": {
      "nimbus": {
        "id": [
          "16Uiu2HAmV2BjFPcY4QYRuWE5DxpS2KpfLogiSmVKe9Lp9mTt3XBU"
        ],
        "topic": [
          "/eth2/fdca39b0/beacon_aggregate_and_proof/ssz_snappy"
        ]
      }
    },
    "type": {
      "nimbus": "unknown"
    }
  },
  "libp2p_pubsub_sent_messages_total": {
    "doc": {
      "nimbus": ""
    },
    "labels": {
      "nimbus": {
        "id": [
          "16Uiu2HAmV2BjFPcY4QYRuWE5DxpS2KpfLogiSmVKe9Lp9mTt3XBU"
        ],
        "topic": [
          "/eth2/fdca39b0/beacon_aggregate_and_proof/ssz_snappy"
        ]
      }
    },
    "type": {
      "nimbus": "unknown"
    }
  },
  "libp2p_pubsub_sig_verify_failure": {
    "doc": {
      "nimbus": "pubsub failed validated messages"
    },
    "labels": {
      "nimbus": {}
    },
    "type": {
      "nimbus": "counter"
    }
  },
  "libp2p_pubsub_sig_verify_failure_created": {
    "doc": {
      "nimbus": ""
    },
    "labels": {
      "nimbus": {}
    },
    "type": {
      "nimbus": "unknown"
    }
  },
  "libp2p_pubsub_sig_verify_failure_total": {
    "doc": {
      "nimbus": ""
    },
    "labels": {
      "nimbus": {}
    },
    "type": {
      "nimbus": "unknown"
    }
  },
  "libp2p_pubsub_sig_verify_success": {
    "doc": {
      "nimbus": "pubsub successfully validated messages"
    },
    "labels": {
      "nimbus": {}
    },
    "type": {
      "nimbus": "counter"
    }
  },
  "libp2p_pubsub_sig_verify_success_created": {
    "doc": {
      "nimbus": ""
    },
    "labels": {
      "nimbus": {}
    },
    "type": {
      "nimbus": "unknown"
    }
  },
  "libp2p_pubsub_sig_verify_success_total": {
    "doc": {
      "nimbus": ""
    },
    "labels": {
      "nimbus": {}
    },
    "type": {
      "nimbus": "unknown"
    }
  },
  "libp2p_pubsub_skipped_received_messages": {
    "doc": {
      "nimbus": "number of received skipped messages"
    },
    "labels": {
      "nimbus": {}
    },
    "type": {
      "nimbus": "counter"
    }
  },
  "libp2p_pubsub_skipped_received_messages_created": {
    "doc": {
      "nimbus": ""
    },
    "labels": {
      "nimbus": {
        "id": [
          "16Uiu2HAmKvyXP7YTcKfyKHfssLVQDKbCSEMSnf6RnAbwynuBmkE5"
        ]
      }
    },
    "type": {
      "nimbus": "unknown"
    }
  },
  "libp2p_pubsub_skipped_received_messages_total": {
    "doc": {
      "nimbus": ""
    },
    "labels": {
      "nimbus": {
        "id": [
          "16Uiu2HAmKvyXP7YTcKfyKHfssLVQDKbCSEMSnf6RnAbwynuBmkE5"
        ]
      }
    },
    "type": {
      "nimbus": "unknown"
    }
  },
  "libp2p_pubsub_skipped_sent_messages": {
    "doc": {
      "nimbus": "number of sent skipped messages"
    },
    "labels": {
      "nimbus": {}
    },
    "type": {
      "nimbus": "counter"
    }
  },
  "libp2p_pubsub_skipped_sent_messages_created": {
    "doc": {
      "nimbus": ""
    },
    "labels": {
      "nimbus": {
        "id": [
          "16Uiu2HAmV2BjFPcY4QYRuWE5DxpS2KpfLogiSmVKe9Lp9mTt3XBU"
        ]
      }
    },
    "type": {
      "nimbus": "unknown"
    }
  },
  "libp2p_pubsub_skipped_sent_messages_total": {
    "doc": {
      "nimbus": ""
    },
    "labels": {
      "nimbus": {
        "id": [
          "16Uiu2HAmV2BjFPcY4QYRuWE5DxpS2KpfLogiSmVKe9Lp9mTt3XBU"
        ]
      }
    },
    "type": {
      "nimbus": "unknown"
    }
  },
  "libp2p_pubsub_topics": {
    "doc": {
      "nimbus": "pubsub subscribed topics"
    },
    "labels": {
      "nimbus": {}
    },
    "type": {
      "nimbus": "gauge"
    }
  },
  "libp2p_pubsub_topics_created": {
    "doc": {
      "nimbus": ""
    },
    "labels": {
      "nimbus": {}
    },
    "type": {
      "nimbus": "unknown"
    }
  },
  "libp2p_pubsub_validation_failure": {
    "doc": {
      "nimbus": "pubsub failed validated messages"
    },
    "labels": {
      "nimbus": {}
    },
    "type": {
      "nimbus": "counter"
    }
  },
  "libp2p_pubsub_validation_failure_created": {
    "doc": {
      "nimbus": ""
    },
    "labels": {
      "nimbus": {}
    },
    "type": {
      "nimbus": "unknown"
    }
  },
  "libp2p_pubsub_validation_failure_total": {
    "doc": {
      "nimbus": ""
    },
    "labels": {
      "nimbus": {}
    },
    "type": {
      "nimbus": "unknown"
    }
  },
  "libp2p_pubsub_validation_success": {
    "doc": {
      "nimbus": "pubsub successfully validated messages"
    },
    "labels": {
      "nimbus": {}
    },
    "type": {
      "nimbus": "counter"
    }
  },
  "libp2p_pubsub_validation_success_created": {
    "doc": {
      "nimbus": ""
    },
    "labels": {
      "nimbus": {}
    },
    "type": {
      "nimbus": "unknown"
    }
  },
  "libp2p_pubsub_validation_success_total": {
    "doc": {
      "nimbus": ""
    },
    "labels": {
      "nimbus": {}
    },
    "type": {
      "nimbus": "unknown"
    }
  },
  "log_entries": {
    "doc": {
      "prysm": "Total number of log messages."
    },
    "labels": {
      "prysm": {
        "level": [
          "error",
          "info"
        ],
        "prefix": [
          "p2p",
          "sync",
          "node",
          "rpc"
        ]
      }
    },
    "type": {
      "prysm": "counter"
    }
  },
  "nbc_failed_dials": {
    "doc": {
      "nimbus": "Number of dialing attempts that failed"
    },
    "labels": {
      "nimbus": {}
    },
    "type": {
      "nimbus": "counter"
    }
  },
  "nbc_failed_dials_created": {
    "doc": {
      "nimbus": ""
    },
    "labels": {
      "nimbus": {}
    },
    "type": {
      "nimbus": "unknown"
    }
  },
  "nbc_failed_dials_total": {
    "doc": {
      "nimbus": ""
    },
    "labels": {
      "nimbus": {}
    },
    "type": {
      "nimbus": "unknown"
    }
  },
  "nbc_gossip_messages_received": {
    "doc": {
      "nimbus": "Number of gossip messages received by this peer"
    },
    "labels": {
      "nimbus": {}
    },
    "type": {
      "nimbus": "counter"
    }
  },
  "nbc_gossip_messages_received_created": {
    "doc": {
      "nimbus": ""
    },
    "labels": {
      "nimbus": {}
    },
    "type": {
      "nimbus": "unknown"
    }
  },
  "nbc_gossip_messages_received_total": {
    "doc": {
      "nimbus": ""
    },
    "labels": {
      "nimbus": {}
    },
    "type": {
      "nimbus": "unknown"
    }
  },
  "nbc_gossip_messages_sent": {
    "doc": {
      "nimbus": "Number of gossip messages sent by this peer"
    },
    "labels": {
      "nimbus": {}
    },
    "type": {
      "nimbus": "counter"
    }
  },
  "nbc_gossip_messages_sent_created": {
    "doc": {
      "nimbus": ""
    },
    "labels": {
      "nimbus": {}
    },
    "type": {
      "nimbus": "unknown"
    }
  },
  "nbc_gossip_messages_sent_total": {
    "doc": {
      "nimbus": ""
    },
    "labels": {
      "nimbus": {}
    },
    "type": {
      "nimbus": "unknown"
    }
  },
  "nbc_peers": {
    "doc": {
      "nimbus": "Number of active libp2p peers"
    },
    "labels": {
      "nimbus": {}
    },
    "type": {
      "nimbus": "gauge"
    }
  },
  "nbc_peers_created": {
    "doc": {
      "nimbus": ""
    },
    "labels": {
      "nimbus": {}
    },
    "type": {
      "nimbus": "unknown"
    }
  },
  "nbc_successful_dials": {
    "doc": {
      "nimbus": "Number of successfully dialed peers"
    },
    "labels": {
      "nimbus": {}
    },
    "type": {
      "nimbus": "counter"
    }
  },
  "nbc_successful_dials_created": {
    "doc": {
      "nimbus": ""
    },
    "labels": {
      "nimbus": {}
    },
    "type": {
      "nimbus": "unknown"
    }
  },
  "nbc_successful_dials_total": {
    "doc": {
      "nimbus": ""
    },
    "labels": {
      "nimbus": {}
    },
    "type": {
      "nimbus": "unknown"
    }
  },
  "nbc_timeout_dials": {
    "doc": {
      "nimbus": "Number of dialing attempts that exceeded timeout"
    },
    "labels": {
      "nimbus": {}
    },
    "type": {
      "nimbus": "counter"
    }
  },
  "nbc_timeout_dials_created": {
    "doc": {
      "nimbus": ""
    },
    "labels": {
      "nimbus": {}
    },
    "type": {
      "nimbus": "unknown"
    }
  },
  "nbc_timeout_dials_total": {
    "doc": {
      "nimbus": ""
    },
    "labels": {
      "nimbus": {}
    },
    "type": {
      "nimbus": "unknown"
    }
  },
  "network_gossip_aggregated_attestations_rx": {
    "doc": {
      "lighthouse": "Count of gossip aggregated attestations received"
    },
    "labels": {
      "lighthouse": {}
    },
    "type": {
      "lighthouse": "counter"
    }
  },
  "network_gossip_aggregated_attestations_tx": {
    "doc": {
      "lighthouse": "Count of gossip aggregated attestations transmitted"
    },
    "labels": {
      "lighthouse": {}
    },
    "type": {
      "lighthouse": "counter"
    }
  },
  "network_gossip_blocks_rx": {
    "doc": {
      "lighthouse": "Count of gossip blocks received"
    },
    "labels": {
      "lighthouse": {}
    },
    "type": {
      "lighthouse": "counter"
    }
  },
  "network_gossip_blocks_tx": {
    "doc": {
      "lighthouse": "Count of gossip blocks transmitted"
    },
    "labels": {
      "lighthouse": {}
    },
    "type": {
      "lighthouse": "counter"
    }
  },
  "network_gossip_unaggregated_attestations_ignored": {
    "doc": {
      "lighthouse": "Count of gossip unaggregated attestations ignored by attestation service"
    },
    "labels": {
      "lighthouse": {}
    },
    "type": {
      "lighthouse": "counter"
    }
  },
  "network_gossip_unaggregated_attestations_rx": {
    "doc": {
      "lighthouse": "Count of gossip unaggregated attestations received"
    },
    "labels": {
      "lighthouse": {}
    },
    "type": {
      "lighthouse": "counter"
    }
  },
  "network_gossip_unaggregated_attestations_tx": {
    "doc": {
      "lighthouse": "Count of gossip unaggregated attestations transmitted"
    },
    "labels": {
      "lighthouse": {}
    },
    "type": {
      "lighthouse": "counter"
    }
  },
  "network_peer_chain_validation_attempts": {
    "doc": {
      "teku": "Number of peers chain verification has been performed on"
    },
    "labels": {
      "teku": {
        "status": [
          "error",
          "valid"
        ]
      }
    },
    "type": {
      "teku": "counter"
    }
  },
  "network_peer_connection_attempt_count": {
    "doc": {
      "teku": "Total number of outbound connection attempts made"
    },
    "labels": {
      "teku": {
        "status": [
          "failed"
        ]
      }
    },
    "type": {
      "teku": "counter"
    }
  },
  "network_peer_goodbye": {
    "doc": {
      "teku": "Total number of goodbye messages received from peers"
    },
    "labels": {
      "teku": {
        "reason": [
          "UNKNOWN"
        ]
      }
    },
    "type": {
      "teku": "counter"
    }
  },
  "network_peer_reputation_cache_size": {
    "doc": {
      "teku": "Total number of peer reputations tracked"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "nim_gc_heap_instance_occupied_bytes": {
    "doc": {
      "nimbus": ""
    },
    "labels": {
      "nimbus": {
        "type_name": [
          "ref HashedBeaconState"
        ]
      }
    },
    "type": {
      "nimbus": "unknown"
    }
  },
  "nim_gc_mem_bytes": {
    "doc": {
      "nimbus": ""
    },
    "labels": {
      "nimbus": {}
    },
    "type": {
      "nimbus": "unknown"
    }
  },
  "nim_gc_mem_occupied_bytes": {
    "doc": {
      "nimbus": ""
    },
    "labels": {
      "nimbus": {}
    },
    "type": {
      "nimbus": "unknown"
    }
  },
  "nim_runtime_info": {
    "doc": {
      "nimbus": "Nim runtime info"
    },
    "labels": {
      "nimbus": {}
    },
    "type": {
      "nimbus": "gauge"
    }
  },
  "nodejs_active_handles": {
    "doc": {
      "lodestar": "Number of active libuv handles grouped by handle type. Every handle type is C++ class name."
    },
    "labels": {
      "lodestar": {
        "type": [
          "Socket"
        ]
      }
    },
    "type": {
      "lodestar": "gauge"
    }
  },
  "nodejs_active_handles_total": {
    "doc": {
      "lodestar": "Total number of active handles."
    },
    "labels": {
      "lodestar": {}
    },
    "type": {
      "lodestar": "gauge"
    }
  },
  "nodejs_active_requests": {
    "doc": {
      "lodestar": "Number of active libuv requests grouped by request type. Every request type is C++ class name."
    },
    "labels": {
      "lodestar": {
        "type": [
          "FSReqCallback"
        ]
      }
    },
    "type": {
      "lodestar": "gauge"
    }
  },
  "nodejs_active_requests_total": {
    "doc": {
      "lodestar": "Total number of active requests."
    },
    "labels": {
      "lodestar": {}
    },
    "type": {
      "lodestar": "gauge"
    }
  },
  "nodejs_eventloop_lag_seconds": {
    "doc": {
      "lodestar": "Lag of event loop in seconds."
    },
    "labels": {
      "lodestar": {}
    },
    "type": {
      "lodestar": "gauge"
    }
  },
  "nodejs_external_memory_bytes": {
    "doc": {
      "lodestar": "Nodejs external memory size in bytes."
    },
    "labels": {
      "lodestar": {}
    },
    "type": {
      "lodestar": "gauge"
    }
  },
  "nodejs_heap_size_total_bytes": {
    "doc": {
      "lodestar": "Process heap size from node.js in bytes."
    },
    "labels": {
      "lodestar": {}
    },
    "type": {
      "lodestar": "gauge"
    }
  },
  "nodejs_heap_size_used_bytes": {
    "doc": {
      "lodestar": "Process heap size used from node.js in bytes."
    },
    "labels": {
      "lodestar": {}
    },
    "type": {
      "lodestar": "gauge"
    }
  },
  "nodejs_heap_space_size_available_bytes": {
    "doc": {
      "lodestar": "Process heap space size available from node.js in bytes."
    },
    "labels": {
      "lodestar": {
        "space": [
          "read_only",
          "new",
          "old",
          "code",
          "map"
        ]
      }
    },
    "type": {
      "lodestar": "gauge"
    }
  },
  "nodejs_heap_space_size_total_bytes": {
    "doc": {
      "lodestar": "Process heap space size total from node.js in bytes."
    },
    "labels": {
      "lodestar": {
        "space": [
          "read_only",
          "new",
          "old",
          "code",
          "map"
        ]
      }
    },
    "type": {
      "lodestar": "gauge"
    }
  },
  "nodejs_heap_space_size_used_bytes": {
    "doc": {
      "lodestar": "Process heap space size used from node.js in bytes."
    },
    "labels": {
      "lodestar": {
        "space": [
          "read_only",
          "new",
          "old",
          "code",
          "map"
        ]
      }
    },
    "type": {
      "lodestar": "gauge"
    }
  },
  "nodejs_version_info": {
    "doc": {
      "lodestar": "Node.js version info."
    },
    "labels": {
      "lodestar": {
        "major": [
          "14"
        ],
        "minor": [
          "0"
        ],
        "patch": [
          "0"
        ],
        "version": [
          "v14.0.0"
        ]
      }
    },
    "type": {
      "lodestar": "gauge"
    }
  },
  "num_pending_attester_slashings": {
    "doc": {
      "prysm": "Number of pending attester slashings in the pool"
    },
    "labels": {
      "prysm": {}
    },
    "type": {
      "prysm": "gauge"
    }
  },
  "num_pending_proposer_slashings": {
    "doc": {
      "prysm": "Number of pending proposer slashings in the pool"
    },
    "labels": {
      "prysm": {}
    },
    "type": {
      "prysm": "gauge"
    }
  },
  "number_of_times_resynced": {
    "doc": {
      "prysm": "Count the number of times a node resyncs."
    },
    "labels": {
      "prysm": {}
    },
    "type": {
      "prysm": "counter"
    }
  },
  "p2p_message_received": {
    "doc": {
      "prysm": "Count of messages received."
    },
    "labels": {
      "prysm": {
        "topic": [
          "/eth2/beacon_chain/req/beacon_blocks_by_range/1/ssz_snappy"
        ]
      }
    },
    "type": {
      "prysm": "counter"
    }
  },
  "p2p_peer_count": {
    "doc": {
      "prysm": "The number of peers in a given state."
    },
    "labels": {
      "prysm": {
        "state": [
          "Bad"
        ]
      }
    },
    "type": {
      "prysm": "gauge"
    }
  },
  "p2p_repeat_attempts": {
    "doc": {
      "prysm": "The number of repeat attempts the connection handler is triggered for a peer."
    },
    "labels": {
      "prysm": {}
    },
    "type": {
      "prysm": "counter"
    }
  },
  "p2p_topic_peer_count": {
    "doc": {
      "prysm": "The number of peers subscribed to a given topic."
    },
    "labels": {
      "prysm": {
        "topic": [
          "/eth2/fdca39b0/attester_slashing/ssz_snappy"
        ]
      }
    },
    "type": {
      "prysm": "gauge"
    }
  },
  "pending_attester_slashing_fail_sig_verify": {
    "doc": {
      "prysm": "Times an pending attester slashing fails sig verification"
    },
    "labels": {
      "prysm": {}
    },
    "type": {
      "prysm": "counter"
    }
  },
  "pending_proposer_slashing_fail_sig_verify": {
    "doc": {
      "prysm": "Times an pending proposer slashing fails sig verification"
    },
    "labels": {
      "prysm": {}
    },
    "type": {
      "prysm": "counter"
    }
  },
  "powchain_block_cache_hit": {
    "doc": {
      "prysm": "The number of block requests that are present in the cache."
    },
    "labels": {
      "prysm": {}
    },
    "type": {
      "prysm": "counter"
    }
  },
  "powchain_block_cache_miss": {
    "doc": {
      "prysm": "The number of block requests that aren't present in the cache."
    },
    "labels": {
      "prysm": {}
    },
    "type": {
      "prysm": "counter"
    }
  },
  "powchain_block_cache_size": {
    "doc": {
      "prysm": "The number of blocks in the block cache"
    },
    "labels": {
      "prysm": {}
    },
    "type": {
      "prysm": "gauge"
    }
  },
  "powchain_block_number": {
    "doc": {
      "prysm": "The current block number in the proof-of-work chain"
    },
    "labels": {
      "prysm": {}
    },
    "type": {
      "prysm": "gauge"
    }
  },
  "powchain_missed_deposit_logs": {
    "doc": {
      "prysm": "The number of times a missed deposit log is detected"
    },
    "labels": {
      "prysm": {}
    },
    "type": {
      "prysm": "counter"
    }
  },
  "powchain_valid_deposits_received": {
    "doc": {
      "prysm": "The number of valid deposits received in the deposit contract"
    },
    "labels": {
      "prysm": {}
    },
    "type": {
      "prysm": "counter"
    }
  },
  "process_cpu_seconds": {
    "doc": {
      "lodestar": "Total user and system CPU time spent in seconds.",
      "prysm": "Total user and system CPU time spent in seconds.",
      "teku": "Total user and system CPU time spent in seconds."
    },
    "labels": {
      "lodestar": {},
      "prysm": {},
      "teku": {}
    },
    "type": {
      "lodestar": "counter",
      "prysm": "counter",
      "teku": "counter"
    }
  },
  "process_cpu_seconds_total": {
    "doc": {
      "nimbus": ""
    },
    "labels": {
      "nimbus": {}
    },
    "type": {
      "nimbus": "unknown"
    }
  },
  "process_cpu_system_seconds": {
    "doc": {
      "lodestar": "Total system CPU time spent in seconds."
    },
    "labels": {
      "lodestar": {}
    },
    "type": {
      "lodestar": "counter"
    }
  },
  "process_cpu_user_seconds": {
    "doc": {
      "lodestar": "Total user CPU time spent in seconds."
    },
    "labels": {
      "lodestar": {}
    },
    "type": {
      "lodestar": "counter"
    }
  },
  "process_heap_bytes": {
    "doc": {
      "lodestar": "Process heap size in bytes."
    },
    "labels": {
      "lodestar": {}
    },
    "type": {
      "lodestar": "gauge"
    }
  },
  "process_info": {
    "doc": {
      "nimbus": "CPU and memory usage"
    },
    "labels": {
      "nimbus": {}
    },
    "type": {
      "nimbus": "gauge"
    }
  },
  "process_max_fds": {
    "doc": {
      "lodestar": "Maximum number of open file descriptors.",
      "nimbus": "",
      "prysm": "Maximum number of open file descriptors.",
      "teku": "Maximum number of open file descriptors."
    },
    "labels": {
      "lodestar": {},
      "nimbus": {},
      "prysm": {},
      "teku": {}
    },
    "type": {
      "lodestar": "gauge",
      "nimbus": "unknown",
      "prysm": "gauge",
      "teku": "gauge"
    }
  },
  "process_num_threads": {
    "doc": {
      "lighthouse": "Number of threads used by the current process"
    },
    "labels": {
      "lighthouse": {}
    },
    "type": {
      "lighthouse": "gauge"
    }
  },
  "process_open_fds": {
    "doc": {
      "lodestar": "Number of open file descriptors.",
      "nimbus": "",
      "prysm": "Number of open file descriptors.",
      "teku": "Number of open file descriptors."
    },
    "labels": {
      "lodestar": {},
      "nimbus": {},
      "prysm": {},
      "teku": {}
    },
    "type": {
      "lodestar": "gauge",
      "nimbus": "unknown",
      "prysm": "gauge",
      "teku": "gauge"
    }
  },
  "process_resident_memory_bytes": {
    "doc": {
      "lighthouse": "Resident memory used by the current process",
      "lodestar": "Resident memory size in bytes.",
      "nimbus": "",
      "prysm": "Resident memory size in bytes.",
      "teku": "Resident memory size in bytes."
    },
    "labels": {
      "lighthouse": {},
      "lodestar": {},
      "nimbus": {},
      "prysm": {},
      "teku": {}
    },
    "type": {
      "lighthouse": "gauge",
      "lodestar": "gauge",
      "nimbus": "unknown",
      "prysm": "gauge",
      "teku": "gauge"
    }
  },
  "process_start_time_seconds": {
    "doc": {
      "lodestar": "Start time of the process since unix epoch in seconds.",
      "nimbus": "",
      "prysm": "Start time of the process since unix epoch in seconds.",
      "teku": "Start time of the process since unix epoch in seconds."
    },
    "labels": {
      "lodestar": {},
      "nimbus": {},
      "prysm": {},
      "teku": {}
    },
    "type": {
      "lodestar": "gauge",
      "nimbus": "unknown",
      "prysm": "gauge",
      "teku": "gauge"
    }
  },
  "process_virtual_memory_bytes": {
    "doc": {
      "lighthouse": "Virtual memory used by the current process",
      "lodestar": "Virtual memory size in bytes.",
      "nimbus": "",
      "prysm": "Virtual memory size in bytes.",
      "teku": "Virtual memory size in bytes."
    },
    "labels": {
      "lighthouse": {},
      "lodestar": {},
      "nimbus": {},
      "prysm": {},
      "teku": {}
    },
    "type": {
      "lighthouse": "gauge",
      "lodestar": "gauge",
      "nimbus": "unknown",
      "prysm": "gauge",
      "teku": "gauge"
    }
  },
  "process_virtual_memory_max_bytes": {
    "doc": {
      "prysm": "Maximum amount of virtual memory available in bytes."
    },
    "labels": {
      "prysm": {}
    },
    "type": {
      "prysm": "gauge"
    }
  },
  "promhttp_metric_handler_requests": {
    "doc": {
      "prysm": "Total number of scrapes by HTTP status code."
    },
    "labels": {
      "prysm": {
        "code": [
          "200",
          "500",
          "503"
        ]
      }
    },
    "type": {
      "prysm": "counter"
    }
  },
  "promhttp_metric_handler_requests_in_flight": {
    "doc": {
      "prysm": "Current number of scrapes being served."
    },
    "labels": {
      "prysm": {}
    },
    "type": {
      "prysm": "gauge"
    }
  },
  "proposer_slashing_reattempts": {
    "doc": {
      "prysm": "Times a proposer slashing for an already slashed validator is received"
    },
    "labels": {
      "prysm": {}
    },
    "type": {
      "prysm": "counter"
    }
  },
  "proposer_slashings_included": {
    "doc": {
      "prysm": "Number of proposer slashings included in blocks"
    },
    "labels": {
      "prysm": {}
    },
    "type": {
      "prysm": "counter"
    }
  },
  "proto_array_attestation_processed_count": {
    "doc": {
      "prysm": "The number of times an attestation is processed for fork choice."
    },
    "labels": {
      "prysm": {}
    },
    "type": {
      "prysm": "counter"
    }
  },
  "proto_array_block_processed_count": {
    "doc": {
      "prysm": "The number of times a block is processed for fork choice."
    },
    "labels": {
      "prysm": {}
    },
    "type": {
      "prysm": "counter"
    }
  },
  "proto_array_head_changed_count": {
    "doc": {
      "prysm": "The number of times head changes."
    },
    "labels": {
      "prysm": {}
    },
    "type": {
      "prysm": "counter"
    }
  },
  "proto_array_head_requested_count": {
    "doc": {
      "prysm": "The number of times someone called head."
    },
    "labels": {
      "prysm": {}
    },
    "type": {
      "prysm": "counter"
    }
  },
  "proto_array_head_slot": {
    "doc": {
      "prysm": "The slot number of the current head."
    },
    "labels": {
      "prysm": {}
    },
    "type": {
      "prysm": "gauge"
    }
  },
  "proto_array_node_count": {
    "doc": {
      "prysm": "The number of nodes in the DAG array based store structure."
    },
    "labels": {
      "prysm": {}
    },
    "type": {
      "prysm": "gauge"
    }
  },
  "proto_array_pruned_count": {
    "doc": {
      "prysm": "The number of times pruning happened."
    },
    "labels": {
      "prysm": {}
    },
    "type": {
      "prysm": "counter"
    }
  },
  "roughtime_offset_nsec": {
    "doc": {
      "prysm": "The absolute value delta between roughtime computed clock time and the system clock time."
    },
    "labels": {
      "prysm": {
        "le": [
          "5e+07",
          "1e+08",
          "5e+08",
          "1e+09",
          "2e+09",
          "1e+10",
          "+Inf"
        ]
      }
    },
    "type": {
      "prysm": "histogram"
    }
  },
  "roughtime_offsets_rejected": {
    "doc": {
      "prysm": "The number of times that roughtime results could not be verified and the returned offset was rejected"
    },
    "labels": {
      "prysm": {}
    },
    "type": {
      "prysm": "counter"
    }
  },
  "routing_table_nodes": {
    "doc": {
      "nimbus": ""
    },
    "labels": {
      "nimbus": {
        "state": [
          "",
          "seen"
        ]
      }
    },
    "type": {
      "nimbus": "unknown"
    }
  },
  "routing_table_nodes_created": {
    "doc": {
      "nimbus": ""
    },
    "labels": {
      "nimbus": {
        "state": [
          "",
          "seen"
        ]
      }
    },
    "type": {
      "nimbus": "unknown"
    }
  },
  "skip_slot_cache_hit": {
    "doc": {
      "prysm": "The total number of cache hits on the skip slot cache."
    },
    "labels": {
      "prysm": {}
    },
    "type": {
      "prysm": "counter"
    }
  },
  "skip_slot_cache_miss": {
    "doc": {
      "prysm": "The total number of cache misses on the skip slot cache."
    },
    "labels": {
      "prysm": {}
    },
    "type": {
      "prysm": "counter"
    }
  },
  "slotclock_present_epoch": {
    "doc": {
      "lighthouse": "The present wall-clock epoch"
    },
    "labels": {
      "lighthouse": {}
    },
    "type": {
      "lighthouse": "gauge"
    }
  },
  "slotclock_present_slot": {
    "doc": {
      "lighthouse": "The present wall-clock slot"
    },
    "labels": {
      "lighthouse": {}
    },
    "type": {
      "lighthouse": "gauge"
    }
  },
  "slotclock_slot_time_milliseconds": {
    "doc": {
      "lighthouse": "The duration in milliseconds between each slot"
    },
    "labels": {
      "lighthouse": {}
    },
    "type": {
      "lighthouse": "gauge"
    }
  },
  "slotclock_slots_per_epoch": {
    "doc": {
      "lighthouse": "Slots per epoch (constant)"
    },
    "labels": {
      "lighthouse": {}
    },
    "type": {
      "lighthouse": "gauge"
    }
  },
  "sqlite3_info": {
    "doc": {
      "nimbus": "SQLite3 info"
    },
    "labels": {
      "nimbus": {}
    },
    "type": {
      "nimbus": "gauge"
    }
  },
  "sqlite3_memory_used_bytes": {
    "doc": {
      "nimbus": ""
    },
    "labels": {
      "nimbus": {}
    },
    "type": {
      "nimbus": "unknown"
    }
  },
  "storage_finalized_block_cache_add": {
    "doc": {
      "teku": "RocksDB reported statistics for BLOCK_CACHE_ADD"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_finalized_block_cache_add_failures": {
    "doc": {
      "teku": "RocksDB reported statistics for BLOCK_CACHE_ADD_FAILURES"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_finalized_block_cache_bytes_read": {
    "doc": {
      "teku": "RocksDB reported statistics for BLOCK_CACHE_BYTES_READ"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_finalized_block_cache_bytes_write": {
    "doc": {
      "teku": "RocksDB reported statistics for BLOCK_CACHE_BYTES_WRITE"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_finalized_block_cache_compressed_add": {
    "doc": {
      "teku": "RocksDB reported statistics for BLOCK_CACHE_COMPRESSED_ADD"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_finalized_block_cache_compressed_add_failures": {
    "doc": {
      "teku": "RocksDB reported statistics for BLOCK_CACHE_COMPRESSED_ADD_FAILURES"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_finalized_block_cache_compressed_hit": {
    "doc": {
      "teku": "RocksDB reported statistics for BLOCK_CACHE_COMPRESSED_HIT"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_finalized_block_cache_compressed_miss": {
    "doc": {
      "teku": "RocksDB reported statistics for BLOCK_CACHE_COMPRESSED_MISS"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_finalized_block_cache_data_add": {
    "doc": {
      "teku": "RocksDB reported statistics for BLOCK_CACHE_DATA_ADD"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_finalized_block_cache_data_bytes_insert": {
    "doc": {
      "teku": "RocksDB reported statistics for BLOCK_CACHE_DATA_BYTES_INSERT"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_finalized_block_cache_data_hit": {
    "doc": {
      "teku": "RocksDB reported statistics for BLOCK_CACHE_DATA_HIT"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_finalized_block_cache_data_miss": {
    "doc": {
      "teku": "RocksDB reported statistics for BLOCK_CACHE_DATA_MISS"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_finalized_block_cache_filter_add": {
    "doc": {
      "teku": "RocksDB reported statistics for BLOCK_CACHE_FILTER_ADD"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_finalized_block_cache_filter_bytes_evict": {
    "doc": {
      "teku": "RocksDB reported statistics for BLOCK_CACHE_FILTER_BYTES_EVICT"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_finalized_block_cache_filter_bytes_insert": {
    "doc": {
      "teku": "RocksDB reported statistics for BLOCK_CACHE_FILTER_BYTES_INSERT"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_finalized_block_cache_filter_hit": {
    "doc": {
      "teku": "RocksDB reported statistics for BLOCK_CACHE_FILTER_HIT"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_finalized_block_cache_filter_miss": {
    "doc": {
      "teku": "RocksDB reported statistics for BLOCK_CACHE_FILTER_MISS"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_finalized_block_cache_hit": {
    "doc": {
      "teku": "RocksDB reported statistics for BLOCK_CACHE_HIT"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_finalized_block_cache_index_add": {
    "doc": {
      "teku": "RocksDB reported statistics for BLOCK_CACHE_INDEX_ADD"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_finalized_block_cache_index_bytes_evict": {
    "doc": {
      "teku": "RocksDB reported statistics for BLOCK_CACHE_INDEX_BYTES_EVICT"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_finalized_block_cache_index_bytes_insert": {
    "doc": {
      "teku": "RocksDB reported statistics for BLOCK_CACHE_INDEX_BYTES_INSERT"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_finalized_block_cache_index_hit": {
    "doc": {
      "teku": "RocksDB reported statistics for BLOCK_CACHE_INDEX_HIT"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_finalized_block_cache_index_miss": {
    "doc": {
      "teku": "RocksDB reported statistics for BLOCK_CACHE_INDEX_MISS"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_finalized_bloom_filter_prefix_checked": {
    "doc": {
      "teku": "RocksDB reported statistics for BLOOM_FILTER_PREFIX_CHECKED"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_finalized_bloom_filter_prefix_useful": {
    "doc": {
      "teku": "RocksDB reported statistics for BLOOM_FILTER_PREFIX_USEFUL"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_finalized_bloom_filter_useful": {
    "doc": {
      "teku": "RocksDB reported statistics for BLOOM_FILTER_USEFUL"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_finalized_bytes_compressed": {
    "doc": {
      "teku": "RocksDB histogram for storage_finalized_bytes_compressed"
    },
    "labels": {
      "teku": {
        "quantile": [
          "0.5",
          "0.95",
          "0.99"
        ]
      }
    },
    "type": {
      "teku": "summary"
    }
  },
  "storage_finalized_bytes_decompressed": {
    "doc": {
      "teku": "RocksDB histogram for storage_finalized_bytes_decompressed"
    },
    "labels": {
      "teku": {
        "quantile": [
          "0.5",
          "0.95",
          "0.99"
        ]
      }
    },
    "type": {
      "teku": "summary"
    }
  },
  "storage_finalized_bytes_per_multiget": {
    "doc": {
      "teku": "RocksDB histogram for storage_finalized_bytes_per_multiget"
    },
    "labels": {
      "teku": {
        "quantile": [
          "0.5",
          "0.95",
          "0.99"
        ]
      }
    },
    "type": {
      "teku": "summary"
    }
  },
  "storage_finalized_bytes_per_read": {
    "doc": {
      "teku": "RocksDB histogram for storage_finalized_bytes_per_read"
    },
    "labels": {
      "teku": {
        "quantile": [
          "0.5",
          "0.95",
          "0.99"
        ]
      }
    },
    "type": {
      "teku": "summary"
    }
  },
  "storage_finalized_bytes_per_write": {
    "doc": {
      "teku": "RocksDB histogram for storage_finalized_bytes_per_write"
    },
    "labels": {
      "teku": {
        "quantile": [
          "0.5",
          "0.95",
          "0.99"
        ]
      }
    },
    "type": {
      "teku": "summary"
    }
  },
  "storage_finalized_bytes_read": {
    "doc": {
      "teku": "RocksDB reported statistics for BYTES_READ"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_finalized_bytes_written": {
    "doc": {
      "teku": "RocksDB reported statistics for BYTES_WRITTEN"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_finalized_compact_read_bytes": {
    "doc": {
      "teku": "RocksDB reported statistics for COMPACT_READ_BYTES"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_finalized_compact_write_bytes": {
    "doc": {
      "teku": "RocksDB reported statistics for COMPACT_WRITE_BYTES"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_finalized_compaction_key_drop_newer_entry": {
    "doc": {
      "teku": "RocksDB reported statistics for COMPACTION_KEY_DROP_NEWER_ENTRY"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_finalized_compaction_key_drop_obsolete": {
    "doc": {
      "teku": "RocksDB reported statistics for COMPACTION_KEY_DROP_OBSOLETE"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_finalized_compaction_key_drop_range_del": {
    "doc": {
      "teku": "RocksDB reported statistics for COMPACTION_KEY_DROP_RANGE_DEL"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_finalized_compaction_key_drop_user": {
    "doc": {
      "teku": "RocksDB reported statistics for COMPACTION_KEY_DROP_USER"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_finalized_compaction_outfile_sync_micros": {
    "doc": {
      "teku": "RocksDB histogram for storage_finalized_compaction_outfile_sync_micros"
    },
    "labels": {
      "teku": {
        "quantile": [
          "0.5",
          "0.95",
          "0.99"
        ]
      }
    },
    "type": {
      "teku": "summary"
    }
  },
  "storage_finalized_compaction_range_del_drop_obsolete": {
    "doc": {
      "teku": "RocksDB reported statistics for COMPACTION_RANGE_DEL_DROP_OBSOLETE"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_finalized_compaction_time": {
    "doc": {
      "teku": "RocksDB histogram for storage_finalized_compaction_time"
    },
    "labels": {
      "teku": {
        "quantile": [
          "0.5",
          "0.95",
          "0.99"
        ]
      }
    },
    "type": {
      "teku": "summary"
    }
  },
  "storage_finalized_compression_times_nanos": {
    "doc": {
      "teku": "RocksDB histogram for storage_finalized_compression_times_nanos"
    },
    "labels": {
      "teku": {
        "quantile": [
          "0.5",
          "0.95",
          "0.99"
        ]
      }
    },
    "type": {
      "teku": "summary"
    }
  },
  "storage_finalized_db_get": {
    "doc": {
      "teku": "RocksDB histogram for storage_finalized_db_get"
    },
    "labels": {
      "teku": {
        "quantile": [
          "0.5",
          "0.95",
          "0.99"
        ]
      }
    },
    "type": {
      "teku": "summary"
    }
  },
  "storage_finalized_db_multiget": {
    "doc": {
      "teku": "RocksDB histogram for storage_finalized_db_multiget"
    },
    "labels": {
      "teku": {
        "quantile": [
          "0.5",
          "0.95",
          "0.99"
        ]
      }
    },
    "type": {
      "teku": "summary"
    }
  },
  "storage_finalized_db_mutex_wait_micros": {
    "doc": {
      "teku": "RocksDB reported statistics for DB_MUTEX_WAIT_MICROS"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_finalized_db_seek": {
    "doc": {
      "teku": "RocksDB histogram for storage_finalized_db_seek"
    },
    "labels": {
      "teku": {
        "quantile": [
          "0.5",
          "0.95",
          "0.99"
        ]
      }
    },
    "type": {
      "teku": "summary"
    }
  },
  "storage_finalized_db_write": {
    "doc": {
      "teku": "RocksDB histogram for storage_finalized_db_write"
    },
    "labels": {
      "teku": {
        "quantile": [
          "0.5",
          "0.95",
          "0.99"
        ]
      }
    },
    "type": {
      "teku": "summary"
    }
  },
  "storage_finalized_decompression_times_nanos": {
    "doc": {
      "teku": "RocksDB histogram for storage_finalized_decompression_times_nanos"
    },
    "labels": {
      "teku": {
        "quantile": [
          "0.5",
          "0.95",
          "0.99"
        ]
      }
    },
    "type": {
      "teku": "summary"
    }
  },
  "storage_finalized_filter_operation_total_time": {
    "doc": {
      "teku": "RocksDB reported statistics for FILTER_OPERATION_TOTAL_TIME"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_finalized_flush_write_bytes": {
    "doc": {
      "teku": "RocksDB reported statistics for FLUSH_WRITE_BYTES"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_finalized_get_hit_l0": {
    "doc": {
      "teku": "RocksDB reported statistics for GET_HIT_L0"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_finalized_get_hit_l1": {
    "doc": {
      "teku": "RocksDB reported statistics for GET_HIT_L1"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_finalized_get_hit_l2_and_up": {
    "doc": {
      "teku": "RocksDB reported statistics for GET_HIT_L2_AND_UP"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_finalized_get_updates_since_calls": {
    "doc": {
      "teku": "RocksDB reported statistics for GET_UPDATES_SINCE_CALLS"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_finalized_hard_rate_limit_delay_count": {
    "doc": {
      "teku": "RocksDB histogram for storage_finalized_hard_rate_limit_delay_count"
    },
    "labels": {
      "teku": {
        "quantile": [
          "0.5",
          "0.95",
          "0.99"
        ]
      }
    },
    "type": {
      "teku": "summary"
    }
  },
  "storage_finalized_iter_bytes_read": {
    "doc": {
      "teku": "RocksDB reported statistics for ITER_BYTES_READ"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_finalized_manifest_file_sync_micros": {
    "doc": {
      "teku": "RocksDB histogram for storage_finalized_manifest_file_sync_micros"
    },
    "labels": {
      "teku": {
        "quantile": [
          "0.5",
          "0.95",
          "0.99"
        ]
      }
    },
    "type": {
      "teku": "summary"
    }
  },
  "storage_finalized_memtable_hit": {
    "doc": {
      "teku": "RocksDB reported statistics for MEMTABLE_HIT"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_finalized_memtable_miss": {
    "doc": {
      "teku": "RocksDB reported statistics for MEMTABLE_MISS"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_finalized_merge_operation_total_time": {
    "doc": {
      "teku": "RocksDB reported statistics for MERGE_OPERATION_TOTAL_TIME"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_finalized_no_file_closes": {
    "doc": {
      "teku": "RocksDB reported statistics for NO_FILE_CLOSES"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_finalized_no_file_errors": {
    "doc": {
      "teku": "RocksDB reported statistics for NO_FILE_ERRORS"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_finalized_no_file_opens": {
    "doc": {
      "teku": "RocksDB reported statistics for NO_FILE_OPENS"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_finalized_no_iterators": {
    "doc": {
      "teku": "RocksDB reported statistics for NO_ITERATORS"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_finalized_num_files_in_single_compaction": {
    "doc": {
      "teku": "RocksDB histogram for storage_finalized_num_files_in_single_compaction"
    },
    "labels": {
      "teku": {
        "quantile": [
          "0.5",
          "0.95",
          "0.99"
        ]
      }
    },
    "type": {
      "teku": "summary"
    }
  },
  "storage_finalized_num_subcompactions_scheduled": {
    "doc": {
      "teku": "RocksDB histogram for storage_finalized_num_subcompactions_scheduled"
    },
    "labels": {
      "teku": {
        "quantile": [
          "0.5",
          "0.95",
          "0.99"
        ]
      }
    },
    "type": {
      "teku": "summary"
    }
  },
  "storage_finalized_number_block_compressed": {
    "doc": {
      "teku": "RocksDB reported statistics for NUMBER_BLOCK_COMPRESSED"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_finalized_number_block_decompressed": {
    "doc": {
      "teku": "RocksDB reported statistics for NUMBER_BLOCK_DECOMPRESSED"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_finalized_number_block_not_compressed": {
    "doc": {
      "teku": "RocksDB reported statistics for NUMBER_BLOCK_NOT_COMPRESSED"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_finalized_number_db_next": {
    "doc": {
      "teku": "RocksDB reported statistics for NUMBER_DB_NEXT"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_finalized_number_db_next_found": {
    "doc": {
      "teku": "RocksDB reported statistics for NUMBER_DB_NEXT_FOUND"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_finalized_number_db_prev": {
    "doc": {
      "teku": "RocksDB reported statistics for NUMBER_DB_PREV"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_finalized_number_db_prev_found": {
    "doc": {
      "teku": "RocksDB reported statistics for NUMBER_DB_PREV_FOUND"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_finalized_number_db_seek": {
    "doc": {
      "teku": "RocksDB reported statistics for NUMBER_DB_SEEK"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_finalized_number_db_seek_found": {
    "doc": {
      "teku": "RocksDB reported statistics for NUMBER_DB_SEEK_FOUND"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_finalized_number_direct_load_table_properties": {
    "doc": {
      "teku": "RocksDB reported statistics for NUMBER_DIRECT_LOAD_TABLE_PROPERTIES"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_finalized_number_filtered_deletes": {
    "doc": {
      "teku": "RocksDB reported statistics for NUMBER_FILTERED_DELETES"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_finalized_number_iter_skip": {
    "doc": {
      "teku": "RocksDB reported statistics for NUMBER_ITER_SKIP"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_finalized_number_keys_read": {
    "doc": {
      "teku": "RocksDB reported statistics for NUMBER_KEYS_READ"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_finalized_number_keys_updated": {
    "doc": {
      "teku": "RocksDB reported statistics for NUMBER_KEYS_UPDATED"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_finalized_number_keys_written": {
    "doc": {
      "teku": "RocksDB reported statistics for NUMBER_KEYS_WRITTEN"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_finalized_number_merge_failures": {
    "doc": {
      "teku": "RocksDB reported statistics for NUMBER_MERGE_FAILURES"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_finalized_number_multiget_bytes_read": {
    "doc": {
      "teku": "RocksDB reported statistics for NUMBER_MULTIGET_BYTES_READ"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_finalized_number_multiget_calls": {
    "doc": {
      "teku": "RocksDB reported statistics for NUMBER_MULTIGET_CALLS"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_finalized_number_multiget_keys_found": {
    "doc": {
      "teku": "RocksDB reported statistics for NUMBER_MULTIGET_KEYS_FOUND"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_finalized_number_multiget_keys_read": {
    "doc": {
      "teku": "RocksDB reported statistics for NUMBER_MULTIGET_KEYS_READ"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_finalized_number_of_reseeks_in_iteration": {
    "doc": {
      "teku": "RocksDB reported statistics for NUMBER_OF_RESEEKS_IN_ITERATION"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_finalized_number_rate_limiter_drains": {
    "doc": {
      "teku": "RocksDB reported statistics for NUMBER_RATE_LIMITER_DRAINS"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_finalized_number_superversion_acquires": {
    "doc": {
      "teku": "RocksDB reported statistics for NUMBER_SUPERVERSION_ACQUIRES"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_finalized_number_superversion_cleanups": {
    "doc": {
      "teku": "RocksDB reported statistics for NUMBER_SUPERVERSION_CLEANUPS"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_finalized_number_superversion_releases": {
    "doc": {
      "teku": "RocksDB reported statistics for NUMBER_SUPERVERSION_RELEASES"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_finalized_persistent_cache_hit": {
    "doc": {
      "teku": "RocksDB reported statistics for PERSISTENT_CACHE_HIT"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_finalized_persistent_cache_miss": {
    "doc": {
      "teku": "RocksDB reported statistics for PERSISTENT_CACHE_MISS"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_finalized_rate_limit_delay_millis": {
    "doc": {
      "teku": "RocksDB reported statistics for RATE_LIMIT_DELAY_MILLIS"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_finalized_read_amp_estimate_useful_bytes": {
    "doc": {
      "teku": "RocksDB reported statistics for READ_AMP_ESTIMATE_USEFUL_BYTES"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_finalized_read_amp_total_read_bytes": {
    "doc": {
      "teku": "RocksDB reported statistics for READ_AMP_TOTAL_READ_BYTES"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_finalized_read_block_compaction_micros": {
    "doc": {
      "teku": "RocksDB histogram for storage_finalized_read_block_compaction_micros"
    },
    "labels": {
      "teku": {
        "quantile": [
          "0.5",
          "0.95",
          "0.99"
        ]
      }
    },
    "type": {
      "teku": "summary"
    }
  },
  "storage_finalized_read_block_get_micros": {
    "doc": {
      "teku": "RocksDB histogram for storage_finalized_read_block_get_micros"
    },
    "labels": {
      "teku": {
        "quantile": [
          "0.5",
          "0.95",
          "0.99"
        ]
      }
    },
    "type": {
      "teku": "summary"
    }
  },
  "storage_finalized_read_num_merge_operands": {
    "doc": {
      "teku": "RocksDB histogram for storage_finalized_read_num_merge_operands"
    },
    "labels": {
      "teku": {
        "quantile": [
          "0.5",
          "0.95",
          "0.99"
        ]
      }
    },
    "type": {
      "teku": "summary"
    }
  },
  "storage_finalized_row_cache_hit": {
    "doc": {
      "teku": "RocksDB reported statistics for ROW_CACHE_HIT"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_finalized_row_cache_miss": {
    "doc": {
      "teku": "RocksDB reported statistics for ROW_CACHE_MISS"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_finalized_sim_block_cache_hit": {
    "doc": {
      "teku": "RocksDB reported statistics for SIM_BLOCK_CACHE_HIT"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_finalized_sim_block_cache_miss": {
    "doc": {
      "teku": "RocksDB reported statistics for SIM_BLOCK_CACHE_MISS"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_finalized_soft_rate_limit_delay_count": {
    "doc": {
      "teku": "RocksDB histogram for storage_finalized_soft_rate_limit_delay_count"
    },
    "labels": {
      "teku": {
        "quantile": [
          "0.5",
          "0.95",
          "0.99"
        ]
      }
    },
    "type": {
      "teku": "summary"
    }
  },
  "storage_finalized_sst_read_micros": {
    "doc": {
      "teku": "RocksDB histogram for storage_finalized_sst_read_micros"
    },
    "labels": {
      "teku": {
        "quantile": [
          "0.5",
          "0.95",
          "0.99"
        ]
      }
    },
    "type": {
      "teku": "summary"
    }
  },
  "storage_finalized_stall_l0_num_files_count": {
    "doc": {
      "teku": "RocksDB histogram for storage_finalized_stall_l0_num_files_count"
    },
    "labels": {
      "teku": {
        "quantile": [
          "0.5",
          "0.95",
          "0.99"
        ]
      }
    },
    "type": {
      "teku": "summary"
    }
  },
  "storage_finalized_stall_l0_slowdown_count": {
    "doc": {
      "teku": "RocksDB histogram for storage_finalized_stall_l0_slowdown_count"
    },
    "labels": {
      "teku": {
        "quantile": [
          "0.5",
          "0.95",
          "0.99"
        ]
      }
    },
    "type": {
      "teku": "summary"
    }
  },
  "storage_finalized_stall_memtable_compaction_count": {
    "doc": {
      "teku": "RocksDB histogram for storage_finalized_stall_memtable_compaction_count"
    },
    "labels": {
      "teku": {
        "quantile": [
          "0.5",
          "0.95",
          "0.99"
        ]
      }
    },
    "type": {
      "teku": "summary"
    }
  },
  "storage_finalized_stall_micros": {
    "doc": {
      "teku": "RocksDB reported statistics for STALL_MICROS"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_finalized_subcompaction_setup_time": {
    "doc": {
      "teku": "RocksDB histogram for storage_finalized_subcompaction_setup_time"
    },
    "labels": {
      "teku": {
        "quantile": [
          "0.5",
          "0.95",
          "0.99"
        ]
      }
    },
    "type": {
      "teku": "summary"
    }
  },
  "storage_finalized_table_open_io_micros": {
    "doc": {
      "teku": "RocksDB histogram for storage_finalized_table_open_io_micros"
    },
    "labels": {
      "teku": {
        "quantile": [
          "0.5",
          "0.95",
          "0.99"
        ]
      }
    },
    "type": {
      "teku": "summary"
    }
  },
  "storage_finalized_table_sync_micros": {
    "doc": {
      "teku": "RocksDB histogram for storage_finalized_table_sync_micros"
    },
    "labels": {
      "teku": {
        "quantile": [
          "0.5",
          "0.95",
          "0.99"
        ]
      }
    },
    "type": {
      "teku": "summary"
    }
  },
  "storage_finalized_wal_file_bytes": {
    "doc": {
      "teku": "RocksDB reported statistics for WAL_FILE_BYTES"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_finalized_wal_file_sync_micros": {
    "doc": {
      "teku": "RocksDB histogram for storage_finalized_wal_file_sync_micros"
    },
    "labels": {
      "teku": {
        "quantile": [
          "0.5",
          "0.95",
          "0.99"
        ]
      }
    },
    "type": {
      "teku": "summary"
    }
  },
  "storage_finalized_wal_file_synced": {
    "doc": {
      "teku": "RocksDB reported statistics for WAL_FILE_SYNCED"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_finalized_write_done_by_other": {
    "doc": {
      "teku": "RocksDB reported statistics for WRITE_DONE_BY_OTHER"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_finalized_write_done_by_self": {
    "doc": {
      "teku": "RocksDB reported statistics for WRITE_DONE_BY_SELF"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_finalized_write_raw_block_micros": {
    "doc": {
      "teku": "RocksDB histogram for storage_finalized_write_raw_block_micros"
    },
    "labels": {
      "teku": {
        "quantile": [
          "0.5",
          "0.95",
          "0.99"
        ]
      }
    },
    "type": {
      "teku": "summary"
    }
  },
  "storage_finalized_write_stall": {
    "doc": {
      "teku": "RocksDB histogram for storage_finalized_write_stall"
    },
    "labels": {
      "teku": {
        "quantile": [
          "0.5",
          "0.95",
          "0.99"
        ]
      }
    },
    "type": {
      "teku": "summary"
    }
  },
  "storage_finalized_write_timedout": {
    "doc": {
      "teku": "RocksDB reported statistics for WRITE_TIMEDOUT"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_finalized_write_with_wal": {
    "doc": {
      "teku": "RocksDB reported statistics for WRITE_WITH_WAL"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_hot_block_cache_add": {
    "doc": {
      "teku": "RocksDB reported statistics for BLOCK_CACHE_ADD"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_hot_block_cache_add_failures": {
    "doc": {
      "teku": "RocksDB reported statistics for BLOCK_CACHE_ADD_FAILURES"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_hot_block_cache_bytes_read": {
    "doc": {
      "teku": "RocksDB reported statistics for BLOCK_CACHE_BYTES_READ"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_hot_block_cache_bytes_write": {
    "doc": {
      "teku": "RocksDB reported statistics for BLOCK_CACHE_BYTES_WRITE"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_hot_block_cache_compressed_add": {
    "doc": {
      "teku": "RocksDB reported statistics for BLOCK_CACHE_COMPRESSED_ADD"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_hot_block_cache_compressed_add_failures": {
    "doc": {
      "teku": "RocksDB reported statistics for BLOCK_CACHE_COMPRESSED_ADD_FAILURES"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_hot_block_cache_compressed_hit": {
    "doc": {
      "teku": "RocksDB reported statistics for BLOCK_CACHE_COMPRESSED_HIT"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_hot_block_cache_compressed_miss": {
    "doc": {
      "teku": "RocksDB reported statistics for BLOCK_CACHE_COMPRESSED_MISS"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_hot_block_cache_data_add": {
    "doc": {
      "teku": "RocksDB reported statistics for BLOCK_CACHE_DATA_ADD"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_hot_block_cache_data_bytes_insert": {
    "doc": {
      "teku": "RocksDB reported statistics for BLOCK_CACHE_DATA_BYTES_INSERT"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_hot_block_cache_data_hit": {
    "doc": {
      "teku": "RocksDB reported statistics for BLOCK_CACHE_DATA_HIT"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_hot_block_cache_data_miss": {
    "doc": {
      "teku": "RocksDB reported statistics for BLOCK_CACHE_DATA_MISS"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_hot_block_cache_filter_add": {
    "doc": {
      "teku": "RocksDB reported statistics for BLOCK_CACHE_FILTER_ADD"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_hot_block_cache_filter_bytes_evict": {
    "doc": {
      "teku": "RocksDB reported statistics for BLOCK_CACHE_FILTER_BYTES_EVICT"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_hot_block_cache_filter_bytes_insert": {
    "doc": {
      "teku": "RocksDB reported statistics for BLOCK_CACHE_FILTER_BYTES_INSERT"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_hot_block_cache_filter_hit": {
    "doc": {
      "teku": "RocksDB reported statistics for BLOCK_CACHE_FILTER_HIT"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_hot_block_cache_filter_miss": {
    "doc": {
      "teku": "RocksDB reported statistics for BLOCK_CACHE_FILTER_MISS"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_hot_block_cache_hit": {
    "doc": {
      "teku": "RocksDB reported statistics for BLOCK_CACHE_HIT"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_hot_block_cache_index_add": {
    "doc": {
      "teku": "RocksDB reported statistics for BLOCK_CACHE_INDEX_ADD"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_hot_block_cache_index_bytes_evict": {
    "doc": {
      "teku": "RocksDB reported statistics for BLOCK_CACHE_INDEX_BYTES_EVICT"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_hot_block_cache_index_bytes_insert": {
    "doc": {
      "teku": "RocksDB reported statistics for BLOCK_CACHE_INDEX_BYTES_INSERT"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_hot_block_cache_index_hit": {
    "doc": {
      "teku": "RocksDB reported statistics for BLOCK_CACHE_INDEX_HIT"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_hot_block_cache_index_miss": {
    "doc": {
      "teku": "RocksDB reported statistics for BLOCK_CACHE_INDEX_MISS"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_hot_bloom_filter_prefix_checked": {
    "doc": {
      "teku": "RocksDB reported statistics for BLOOM_FILTER_PREFIX_CHECKED"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_hot_bloom_filter_prefix_useful": {
    "doc": {
      "teku": "RocksDB reported statistics for BLOOM_FILTER_PREFIX_USEFUL"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_hot_bloom_filter_useful": {
    "doc": {
      "teku": "RocksDB reported statistics for BLOOM_FILTER_USEFUL"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_hot_bytes_compressed": {
    "doc": {
      "teku": "RocksDB histogram for storage_hot_bytes_compressed"
    },
    "labels": {
      "teku": {
        "quantile": [
          "0.5",
          "0.95",
          "0.99"
        ]
      }
    },
    "type": {
      "teku": "summary"
    }
  },
  "storage_hot_bytes_decompressed": {
    "doc": {
      "teku": "RocksDB histogram for storage_hot_bytes_decompressed"
    },
    "labels": {
      "teku": {
        "quantile": [
          "0.5",
          "0.95",
          "0.99"
        ]
      }
    },
    "type": {
      "teku": "summary"
    }
  },
  "storage_hot_bytes_per_multiget": {
    "doc": {
      "teku": "RocksDB histogram for storage_hot_bytes_per_multiget"
    },
    "labels": {
      "teku": {
        "quantile": [
          "0.5",
          "0.95",
          "0.99"
        ]
      }
    },
    "type": {
      "teku": "summary"
    }
  },
  "storage_hot_bytes_per_read": {
    "doc": {
      "teku": "RocksDB histogram for storage_hot_bytes_per_read"
    },
    "labels": {
      "teku": {
        "quantile": [
          "0.5",
          "0.95",
          "0.99"
        ]
      }
    },
    "type": {
      "teku": "summary"
    }
  },
  "storage_hot_bytes_per_write": {
    "doc": {
      "teku": "RocksDB histogram for storage_hot_bytes_per_write"
    },
    "labels": {
      "teku": {
        "quantile": [
          "0.5",
          "0.95",
          "0.99"
        ]
      }
    },
    "type": {
      "teku": "summary"
    }
  },
  "storage_hot_bytes_read": {
    "doc": {
      "teku": "RocksDB reported statistics for BYTES_READ"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_hot_bytes_written": {
    "doc": {
      "teku": "RocksDB reported statistics for BYTES_WRITTEN"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_hot_compact_read_bytes": {
    "doc": {
      "teku": "RocksDB reported statistics for COMPACT_READ_BYTES"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_hot_compact_write_bytes": {
    "doc": {
      "teku": "RocksDB reported statistics for COMPACT_WRITE_BYTES"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_hot_compaction_key_drop_newer_entry": {
    "doc": {
      "teku": "RocksDB reported statistics for COMPACTION_KEY_DROP_NEWER_ENTRY"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_hot_compaction_key_drop_obsolete": {
    "doc": {
      "teku": "RocksDB reported statistics for COMPACTION_KEY_DROP_OBSOLETE"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_hot_compaction_key_drop_range_del": {
    "doc": {
      "teku": "RocksDB reported statistics for COMPACTION_KEY_DROP_RANGE_DEL"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_hot_compaction_key_drop_user": {
    "doc": {
      "teku": "RocksDB reported statistics for COMPACTION_KEY_DROP_USER"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_hot_compaction_outfile_sync_micros": {
    "doc": {
      "teku": "RocksDB histogram for storage_hot_compaction_outfile_sync_micros"
    },
    "labels": {
      "teku": {
        "quantile": [
          "0.5",
          "0.95",
          "0.99"
        ]
      }
    },
    "type": {
      "teku": "summary"
    }
  },
  "storage_hot_compaction_range_del_drop_obsolete": {
    "doc": {
      "teku": "RocksDB reported statistics for COMPACTION_RANGE_DEL_DROP_OBSOLETE"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_hot_compaction_time": {
    "doc": {
      "teku": "RocksDB histogram for storage_hot_compaction_time"
    },
    "labels": {
      "teku": {
        "quantile": [
          "0.5",
          "0.95",
          "0.99"
        ]
      }
    },
    "type": {
      "teku": "summary"
    }
  },
  "storage_hot_compression_times_nanos": {
    "doc": {
      "teku": "RocksDB histogram for storage_hot_compression_times_nanos"
    },
    "labels": {
      "teku": {
        "quantile": [
          "0.5",
          "0.95",
          "0.99"
        ]
      }
    },
    "type": {
      "teku": "summary"
    }
  },
  "storage_hot_db_get": {
    "doc": {
      "teku": "RocksDB histogram for storage_hot_db_get"
    },
    "labels": {
      "teku": {
        "quantile": [
          "0.5",
          "0.95",
          "0.99"
        ]
      }
    },
    "type": {
      "teku": "summary"
    }
  },
  "storage_hot_db_multiget": {
    "doc": {
      "teku": "RocksDB histogram for storage_hot_db_multiget"
    },
    "labels": {
      "teku": {
        "quantile": [
          "0.5",
          "0.95",
          "0.99"
        ]
      }
    },
    "type": {
      "teku": "summary"
    }
  },
  "storage_hot_db_mutex_wait_micros": {
    "doc": {
      "teku": "RocksDB reported statistics for DB_MUTEX_WAIT_MICROS"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_hot_db_seek": {
    "doc": {
      "teku": "RocksDB histogram for storage_hot_db_seek"
    },
    "labels": {
      "teku": {
        "quantile": [
          "0.5",
          "0.95",
          "0.99"
        ]
      }
    },
    "type": {
      "teku": "summary"
    }
  },
  "storage_hot_db_write": {
    "doc": {
      "teku": "RocksDB histogram for storage_hot_db_write"
    },
    "labels": {
      "teku": {
        "quantile": [
          "0.5",
          "0.95",
          "0.99"
        ]
      }
    },
    "type": {
      "teku": "summary"
    }
  },
  "storage_hot_decompression_times_nanos": {
    "doc": {
      "teku": "RocksDB histogram for storage_hot_decompression_times_nanos"
    },
    "labels": {
      "teku": {
        "quantile": [
          "0.5",
          "0.95",
          "0.99"
        ]
      }
    },
    "type": {
      "teku": "summary"
    }
  },
  "storage_hot_filter_operation_total_time": {
    "doc": {
      "teku": "RocksDB reported statistics for FILTER_OPERATION_TOTAL_TIME"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_hot_flush_write_bytes": {
    "doc": {
      "teku": "RocksDB reported statistics for FLUSH_WRITE_BYTES"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_hot_get_hit_l0": {
    "doc": {
      "teku": "RocksDB reported statistics for GET_HIT_L0"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_hot_get_hit_l1": {
    "doc": {
      "teku": "RocksDB reported statistics for GET_HIT_L1"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_hot_get_hit_l2_and_up": {
    "doc": {
      "teku": "RocksDB reported statistics for GET_HIT_L2_AND_UP"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_hot_get_updates_since_calls": {
    "doc": {
      "teku": "RocksDB reported statistics for GET_UPDATES_SINCE_CALLS"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_hot_hard_rate_limit_delay_count": {
    "doc": {
      "teku": "RocksDB histogram for storage_hot_hard_rate_limit_delay_count"
    },
    "labels": {
      "teku": {
        "quantile": [
          "0.5",
          "0.95",
          "0.99"
        ]
      }
    },
    "type": {
      "teku": "summary"
    }
  },
  "storage_hot_iter_bytes_read": {
    "doc": {
      "teku": "RocksDB reported statistics for ITER_BYTES_READ"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_hot_manifest_file_sync_micros": {
    "doc": {
      "teku": "RocksDB histogram for storage_hot_manifest_file_sync_micros"
    },
    "labels": {
      "teku": {
        "quantile": [
          "0.5",
          "0.95",
          "0.99"
        ]
      }
    },
    "type": {
      "teku": "summary"
    }
  },
  "storage_hot_memtable_hit": {
    "doc": {
      "teku": "RocksDB reported statistics for MEMTABLE_HIT"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_hot_memtable_miss": {
    "doc": {
      "teku": "RocksDB reported statistics for MEMTABLE_MISS"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_hot_merge_operation_total_time": {
    "doc": {
      "teku": "RocksDB reported statistics for MERGE_OPERATION_TOTAL_TIME"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_hot_no_file_closes": {
    "doc": {
      "teku": "RocksDB reported statistics for NO_FILE_CLOSES"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_hot_no_file_errors": {
    "doc": {
      "teku": "RocksDB reported statistics for NO_FILE_ERRORS"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_hot_no_file_opens": {
    "doc": {
      "teku": "RocksDB reported statistics for NO_FILE_OPENS"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_hot_no_iterators": {
    "doc": {
      "teku": "RocksDB reported statistics for NO_ITERATORS"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_hot_num_files_in_single_compaction": {
    "doc": {
      "teku": "RocksDB histogram for storage_hot_num_files_in_single_compaction"
    },
    "labels": {
      "teku": {
        "quantile": [
          "0.5",
          "0.95",
          "0.99"
        ]
      }
    },
    "type": {
      "teku": "summary"
    }
  },
  "storage_hot_num_subcompactions_scheduled": {
    "doc": {
      "teku": "RocksDB histogram for storage_hot_num_subcompactions_scheduled"
    },
    "labels": {
      "teku": {
        "quantile": [
          "0.5",
          "0.95",
          "0.99"
        ]
      }
    },
    "type": {
      "teku": "summary"
    }
  },
  "storage_hot_number_block_compressed": {
    "doc": {
      "teku": "RocksDB reported statistics for NUMBER_BLOCK_COMPRESSED"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_hot_number_block_decompressed": {
    "doc": {
      "teku": "RocksDB reported statistics for NUMBER_BLOCK_DECOMPRESSED"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_hot_number_block_not_compressed": {
    "doc": {
      "teku": "RocksDB reported statistics for NUMBER_BLOCK_NOT_COMPRESSED"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_hot_number_db_next": {
    "doc": {
      "teku": "RocksDB reported statistics for NUMBER_DB_NEXT"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_hot_number_db_next_found": {
    "doc": {
      "teku": "RocksDB reported statistics for NUMBER_DB_NEXT_FOUND"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_hot_number_db_prev": {
    "doc": {
      "teku": "RocksDB reported statistics for NUMBER_DB_PREV"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_hot_number_db_prev_found": {
    "doc": {
      "teku": "RocksDB reported statistics for NUMBER_DB_PREV_FOUND"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_hot_number_db_seek": {
    "doc": {
      "teku": "RocksDB reported statistics for NUMBER_DB_SEEK"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_hot_number_db_seek_found": {
    "doc": {
      "teku": "RocksDB reported statistics for NUMBER_DB_SEEK_FOUND"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_hot_number_direct_load_table_properties": {
    "doc": {
      "teku": "RocksDB reported statistics for NUMBER_DIRECT_LOAD_TABLE_PROPERTIES"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_hot_number_filtered_deletes": {
    "doc": {
      "teku": "RocksDB reported statistics for NUMBER_FILTERED_DELETES"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_hot_number_iter_skip": {
    "doc": {
      "teku": "RocksDB reported statistics for NUMBER_ITER_SKIP"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_hot_number_keys_read": {
    "doc": {
      "teku": "RocksDB reported statistics for NUMBER_KEYS_READ"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_hot_number_keys_updated": {
    "doc": {
      "teku": "RocksDB reported statistics for NUMBER_KEYS_UPDATED"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_hot_number_keys_written": {
    "doc": {
      "teku": "RocksDB reported statistics for NUMBER_KEYS_WRITTEN"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_hot_number_merge_failures": {
    "doc": {
      "teku": "RocksDB reported statistics for NUMBER_MERGE_FAILURES"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_hot_number_multiget_bytes_read": {
    "doc": {
      "teku": "RocksDB reported statistics for NUMBER_MULTIGET_BYTES_READ"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_hot_number_multiget_calls": {
    "doc": {
      "teku": "RocksDB reported statistics for NUMBER_MULTIGET_CALLS"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_hot_number_multiget_keys_found": {
    "doc": {
      "teku": "RocksDB reported statistics for NUMBER_MULTIGET_KEYS_FOUND"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_hot_number_multiget_keys_read": {
    "doc": {
      "teku": "RocksDB reported statistics for NUMBER_MULTIGET_KEYS_READ"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_hot_number_of_reseeks_in_iteration": {
    "doc": {
      "teku": "RocksDB reported statistics for NUMBER_OF_RESEEKS_IN_ITERATION"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_hot_number_rate_limiter_drains": {
    "doc": {
      "teku": "RocksDB reported statistics for NUMBER_RATE_LIMITER_DRAINS"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_hot_number_superversion_acquires": {
    "doc": {
      "teku": "RocksDB reported statistics for NUMBER_SUPERVERSION_ACQUIRES"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_hot_number_superversion_cleanups": {
    "doc": {
      "teku": "RocksDB reported statistics for NUMBER_SUPERVERSION_CLEANUPS"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_hot_number_superversion_releases": {
    "doc": {
      "teku": "RocksDB reported statistics for NUMBER_SUPERVERSION_RELEASES"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_hot_persistent_cache_hit": {
    "doc": {
      "teku": "RocksDB reported statistics for PERSISTENT_CACHE_HIT"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_hot_persistent_cache_miss": {
    "doc": {
      "teku": "RocksDB reported statistics for PERSISTENT_CACHE_MISS"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_hot_rate_limit_delay_millis": {
    "doc": {
      "teku": "RocksDB reported statistics for RATE_LIMIT_DELAY_MILLIS"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_hot_read_amp_estimate_useful_bytes": {
    "doc": {
      "teku": "RocksDB reported statistics for READ_AMP_ESTIMATE_USEFUL_BYTES"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_hot_read_amp_total_read_bytes": {
    "doc": {
      "teku": "RocksDB reported statistics for READ_AMP_TOTAL_READ_BYTES"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_hot_read_block_compaction_micros": {
    "doc": {
      "teku": "RocksDB histogram for storage_hot_read_block_compaction_micros"
    },
    "labels": {
      "teku": {
        "quantile": [
          "0.5",
          "0.95",
          "0.99"
        ]
      }
    },
    "type": {
      "teku": "summary"
    }
  },
  "storage_hot_read_block_get_micros": {
    "doc": {
      "teku": "RocksDB histogram for storage_hot_read_block_get_micros"
    },
    "labels": {
      "teku": {
        "quantile": [
          "0.5",
          "0.95",
          "0.99"
        ]
      }
    },
    "type": {
      "teku": "summary"
    }
  },
  "storage_hot_read_num_merge_operands": {
    "doc": {
      "teku": "RocksDB histogram for storage_hot_read_num_merge_operands"
    },
    "labels": {
      "teku": {
        "quantile": [
          "0.5",
          "0.95",
          "0.99"
        ]
      }
    },
    "type": {
      "teku": "summary"
    }
  },
  "storage_hot_row_cache_hit": {
    "doc": {
      "teku": "RocksDB reported statistics for ROW_CACHE_HIT"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_hot_row_cache_miss": {
    "doc": {
      "teku": "RocksDB reported statistics for ROW_CACHE_MISS"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_hot_sim_block_cache_hit": {
    "doc": {
      "teku": "RocksDB reported statistics for SIM_BLOCK_CACHE_HIT"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_hot_sim_block_cache_miss": {
    "doc": {
      "teku": "RocksDB reported statistics for SIM_BLOCK_CACHE_MISS"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_hot_soft_rate_limit_delay_count": {
    "doc": {
      "teku": "RocksDB histogram for storage_hot_soft_rate_limit_delay_count"
    },
    "labels": {
      "teku": {
        "quantile": [
          "0.5",
          "0.95",
          "0.99"
        ]
      }
    },
    "type": {
      "teku": "summary"
    }
  },
  "storage_hot_sst_read_micros": {
    "doc": {
      "teku": "RocksDB histogram for storage_hot_sst_read_micros"
    },
    "labels": {
      "teku": {
        "quantile": [
          "0.5",
          "0.95",
          "0.99"
        ]
      }
    },
    "type": {
      "teku": "summary"
    }
  },
  "storage_hot_stall_l0_num_files_count": {
    "doc": {
      "teku": "RocksDB histogram for storage_hot_stall_l0_num_files_count"
    },
    "labels": {
      "teku": {
        "quantile": [
          "0.5",
          "0.95",
          "0.99"
        ]
      }
    },
    "type": {
      "teku": "summary"
    }
  },
  "storage_hot_stall_l0_slowdown_count": {
    "doc": {
      "teku": "RocksDB histogram for storage_hot_stall_l0_slowdown_count"
    },
    "labels": {
      "teku": {
        "quantile": [
          "0.5",
          "0.95",
          "0.99"
        ]
      }
    },
    "type": {
      "teku": "summary"
    }
  },
  "storage_hot_stall_memtable_compaction_count": {
    "doc": {
      "teku": "RocksDB histogram for storage_hot_stall_memtable_compaction_count"
    },
    "labels": {
      "teku": {
        "quantile": [
          "0.5",
          "0.95",
          "0.99"
        ]
      }
    },
    "type": {
      "teku": "summary"
    }
  },
  "storage_hot_stall_micros": {
    "doc": {
      "teku": "RocksDB reported statistics for STALL_MICROS"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_hot_subcompaction_setup_time": {
    "doc": {
      "teku": "RocksDB histogram for storage_hot_subcompaction_setup_time"
    },
    "labels": {
      "teku": {
        "quantile": [
          "0.5",
          "0.95",
          "0.99"
        ]
      }
    },
    "type": {
      "teku": "summary"
    }
  },
  "storage_hot_table_open_io_micros": {
    "doc": {
      "teku": "RocksDB histogram for storage_hot_table_open_io_micros"
    },
    "labels": {
      "teku": {
        "quantile": [
          "0.5",
          "0.95",
          "0.99"
        ]
      }
    },
    "type": {
      "teku": "summary"
    }
  },
  "storage_hot_table_sync_micros": {
    "doc": {
      "teku": "RocksDB histogram for storage_hot_table_sync_micros"
    },
    "labels": {
      "teku": {
        "quantile": [
          "0.5",
          "0.95",
          "0.99"
        ]
      }
    },
    "type": {
      "teku": "summary"
    }
  },
  "storage_hot_wal_file_bytes": {
    "doc": {
      "teku": "RocksDB reported statistics for WAL_FILE_BYTES"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_hot_wal_file_sync_micros": {
    "doc": {
      "teku": "RocksDB histogram for storage_hot_wal_file_sync_micros"
    },
    "labels": {
      "teku": {
        "quantile": [
          "0.5",
          "0.95",
          "0.99"
        ]
      }
    },
    "type": {
      "teku": "summary"
    }
  },
  "storage_hot_wal_file_synced": {
    "doc": {
      "teku": "RocksDB reported statistics for WAL_FILE_SYNCED"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_hot_write_done_by_other": {
    "doc": {
      "teku": "RocksDB reported statistics for WRITE_DONE_BY_OTHER"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_hot_write_done_by_self": {
    "doc": {
      "teku": "RocksDB reported statistics for WRITE_DONE_BY_SELF"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_hot_write_raw_block_micros": {
    "doc": {
      "teku": "RocksDB histogram for storage_hot_write_raw_block_micros"
    },
    "labels": {
      "teku": {
        "quantile": [
          "0.5",
          "0.95",
          "0.99"
        ]
      }
    },
    "type": {
      "teku": "summary"
    }
  },
  "storage_hot_write_stall": {
    "doc": {
      "teku": "RocksDB histogram for storage_hot_write_stall"
    },
    "labels": {
      "teku": {
        "quantile": [
          "0.5",
          "0.95",
          "0.99"
        ]
      }
    },
    "type": {
      "teku": "summary"
    }
  },
  "storage_hot_write_timedout": {
    "doc": {
      "teku": "RocksDB reported statistics for WRITE_TIMEDOUT"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_hot_write_with_wal": {
    "doc": {
      "teku": "RocksDB reported statistics for WRITE_WITH_WAL"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_memory_block_count": {
    "doc": {
      "teku": "Number of beacon blocks held in the in-memory store"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_memory_checkpoint_state_count": {
    "doc": {
      "teku": "Number of checkpoint states held in the in-memory store"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_memory_checkpoint_state_requests": {
    "doc": {
      "teku": "Number of requests for checkpoint states from the in-memory store"
    },
    "labels": {
      "teku": {
        "result": [
          "cached",
          "miss"
        ]
      }
    },
    "type": {
      "teku": "counter"
    }
  },
  "storage_memory_state_count": {
    "doc": {
      "teku": "Number of beacon states held in the in-memory store"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "storage_memory_state_requests": {
    "doc": {
      "teku": "Number of requests for BeaconState from the in-memory store"
    },
    "labels": {
      "teku": {
        "result": [
          "cached",
          "miss"
        ]
      }
    },
    "type": {
      "teku": "counter"
    }
  },
  "store_beacon_block_cache_hit": {
    "doc": {
      "lighthouse": "Number of hits to the store's block cache"
    },
    "labels": {
      "lighthouse": {}
    },
    "type": {
      "lighthouse": "counter"
    }
  },
  "store_beacon_block_get": {
    "doc": {
      "lighthouse": "Total number of beacon blocks requested from the store (cache or DB)"
    },
    "labels": {
      "lighthouse": {}
    },
    "type": {
      "lighthouse": "counter"
    }
  },
  "store_beacon_block_read": {
    "doc": {
      "lighthouse": "Total number of beacon block reads from the DB"
    },
    "labels": {
      "lighthouse": {}
    },
    "type": {
      "lighthouse": "counter"
    }
  },
  "store_beacon_block_read_bytes": {
    "doc": {
      "lighthouse": "Total number of beacon block bytes read from the DB"
    },
    "labels": {
      "lighthouse": {}
    },
    "type": {
      "lighthouse": "counter"
    }
  },
  "store_beacon_block_read_overhead_seconds": {
    "doc": {
      "lighthouse": "Overhead on reading a beacon block from the DB (e.g., decoding)"
    },
    "labels": {
      "lighthouse": {
        "le": [
          "0.005",
          "0.01",
          "0.025",
          "0.05",
          "0.1",
          "0.25",
          "0.5",
          "1",
          "2.5",
          "5",
          "10",
          "+Inf"
        ]
      }
    },
    "type": {
      "lighthouse": "histogram"
    }
  },
  "store_beacon_block_write": {
    "doc": {
      "lighthouse": "Total number of beacon block writes the DB"
    },
    "labels": {
      "lighthouse": {}
    },
    "type": {
      "lighthouse": "counter"
    }
  },
  "store_beacon_block_write_bytes": {
    "doc": {
      "lighthouse": "Total number of beacon block bytes written to the DB"
    },
    "labels": {
      "lighthouse": {}
    },
    "type": {
      "lighthouse": "counter"
    }
  },
  "store_beacon_block_write_overhead_seconds": {
    "doc": {
      "lighthouse": "Overhead on writing a beacon block to the DB (e.g., encoding)"
    },
    "labels": {
      "lighthouse": {
        "le": [
          "0.005",
          "0.01",
          "0.025",
          "0.05",
          "0.1",
          "0.25",
          "0.5",
          "1",
          "2.5",
          "5",
          "10",
          "+Inf"
        ]
      }
    },
    "type": {
      "lighthouse": "histogram"
    }
  },
  "store_beacon_state_get": {
    "doc": {
      "lighthouse": "Total number of beacon states requested from the store (cache or DB)"
    },
    "labels": {
      "lighthouse": {}
    },
    "type": {
      "lighthouse": "counter"
    }
  },
  "store_beacon_state_hot_get": {
    "doc": {
      "lighthouse": "Total number of hot beacon states requested from the store (cache or DB)"
    },
    "labels": {
      "lighthouse": {}
    },
    "type": {
      "lighthouse": "counter"
    }
  },
  "store_beacon_state_read": {
    "doc": {
      "lighthouse": "Total number of beacon state reads from the DB"
    },
    "labels": {
      "lighthouse": {}
    },
    "type": {
      "lighthouse": "counter"
    }
  },
  "store_beacon_state_read_bytes": {
    "doc": {
      "lighthouse": "Total number of beacon state bytes read from the DB"
    },
    "labels": {
      "lighthouse": {}
    },
    "type": {
      "lighthouse": "counter"
    }
  },
  "store_beacon_state_read_overhead_seconds": {
    "doc": {
      "lighthouse": "Overhead on reading a beacon state from the DB (e.g., decoding)"
    },
    "labels": {
      "lighthouse": {
        "le": [
          "0.005",
          "0.01",
          "0.025",
          "0.05",
          "0.1",
          "0.25",
          "0.5",
          "1",
          "2.5",
          "5",
          "10",
          "+Inf"
        ]
      }
    },
    "type": {
      "lighthouse": "histogram"
    }
  },
  "store_beacon_state_read_seconds": {
    "doc": {
      "lighthouse": "Total time required to read a BeaconState from the database"
    },
    "labels": {
      "lighthouse": {
        "le": [
          "0.005",
          "0.01",
          "0.025",
          "0.05",
          "0.1",
          "0.25",
          "0.5",
          "1",
          "2.5",
          "5",
          "10",
          "+Inf"
        ]
      }
    },
    "type": {
      "lighthouse": "histogram"
    }
  },
  "store_beacon_state_write": {
    "doc": {
      "lighthouse": "Total number of beacon state writes the DB"
    },
    "labels": {
      "lighthouse": {}
    },
    "type": {
      "lighthouse": "counter"
    }
  },
  "store_beacon_state_write_bytes": {
    "doc": {
      "lighthouse": "Total number of beacon state bytes written to the DB"
    },
    "labels": {
      "lighthouse": {}
    },
    "type": {
      "lighthouse": "counter"
    }
  },
  "store_beacon_state_write_overhead_seconds": {
    "doc": {
      "lighthouse": "Overhead on writing a beacon state to the DB (e.g., encoding)"
    },
    "labels": {
      "lighthouse": {
        "le": [
          "0.005",
          "0.01",
          "0.025",
          "0.05",
          "0.1",
          "0.25",
          "0.5",
          "1",
          "2.5",
          "5",
          "10",
          "+Inf"
        ]
      }
    },
    "type": {
      "lighthouse": "histogram"
    }
  },
  "store_beacon_state_write_seconds": {
    "doc": {
      "lighthouse": "Total time required to write a BeaconState to the database"
    },
    "labels": {
      "lighthouse": {
        "le": [
          "0.005",
          "0.01",
          "0.025",
          "0.05",
          "0.1",
          "0.25",
          "0.5",
          "1",
          "2.5",
          "5",
          "10",
          "+Inf"
        ]
      }
    },
    "type": {
      "lighthouse": "histogram"
    }
  },
  "store_disk_db_delete_count": {
    "doc": {
      "lighthouse": "Total number of deletions from the hot on-disk DB"
    },
    "labels": {
      "lighthouse": {}
    },
    "type": {
      "lighthouse": "counter"
    }
  },
  "store_disk_db_exists_count": {
    "doc": {
      "lighthouse": "Total number of checks if a key is in the hot on-disk DB"
    },
    "labels": {
      "lighthouse": {}
    },
    "type": {
      "lighthouse": "counter"
    }
  },
  "store_disk_db_read_bytes": {
    "doc": {
      "lighthouse": "Number of bytes read from the hot on-disk DB"
    },
    "labels": {
      "lighthouse": {}
    },
    "type": {
      "lighthouse": "counter"
    }
  },
  "store_disk_db_read_count": {
    "doc": {
      "lighthouse": "Total number of reads to the hot on-disk DB"
    },
    "labels": {
      "lighthouse": {}
    },
    "type": {
      "lighthouse": "counter"
    }
  },
  "store_disk_db_read_seconds": {
    "doc": {
      "lighthouse": "Time taken to write bytes to store."
    },
    "labels": {
      "lighthouse": {
        "le": [
          "0.005",
          "0.01",
          "0.025",
          "0.05",
          "0.1",
          "0.25",
          "0.5",
          "1",
          "2.5",
          "5",
          "10",
          "+Inf"
        ]
      }
    },
    "type": {
      "lighthouse": "histogram"
    }
  },
  "store_disk_db_size": {
    "doc": {
      "lighthouse": "Size of the hot on-disk database (bytes)"
    },
    "labels": {
      "lighthouse": {}
    },
    "type": {
      "lighthouse": "gauge"
    }
  },
  "store_disk_db_write_bytes": {
    "doc": {
      "lighthouse": "Number of bytes attempted to be written to the hot on-disk DB"
    },
    "labels": {
      "lighthouse": {}
    },
    "type": {
      "lighthouse": "counter"
    }
  },
  "store_disk_db_write_count": {
    "doc": {
      "lighthouse": "Total number of writes to the hot on-disk DB"
    },
    "labels": {
      "lighthouse": {}
    },
    "type": {
      "lighthouse": "counter"
    }
  },
  "store_disk_db_write_seconds": {
    "doc": {
      "lighthouse": "Time taken to write bytes to store."
    },
    "labels": {
      "lighthouse": {
        "le": [
          "0.005",
          "0.01",
          "0.025",
          "0.05",
          "0.1",
          "0.25",
          "0.5",
          "1",
          "2.5",
          "5",
          "10",
          "+Inf"
        ]
      }
    },
    "type": {
      "lighthouse": "histogram"
    }
  },
  "store_freezer_db_size": {
    "doc": {
      "lighthouse": "Size of the on-disk freezer database (bytes)"
    },
    "labels": {
      "lighthouse": {}
    },
    "type": {
      "lighthouse": "gauge"
    }
  },
  "sync_slots_per_second": {
    "doc": {
      "lighthouse": "The number of blocks being imported per second"
    },
    "labels": {
      "lighthouse": {}
    },
    "type": {
      "lighthouse": "gauge"
    }
  },
  "system_loadavg_1": {
    "doc": {
      "lighthouse": "Loadavg over 1 minute"
    },
    "labels": {
      "lighthouse": {}
    },
    "type": {
      "lighthouse": "gauge"
    }
  },
  "system_loadavg_15": {
    "doc": {
      "lighthouse": "Loadavg over 15 minutes"
    },
    "labels": {
      "lighthouse": {}
    },
    "type": {
      "lighthouse": "gauge"
    }
  },
  "system_loadavg_5": {
    "doc": {
      "lighthouse": "Loadavg over 5 minutes"
    },
    "labels": {
      "lighthouse": {}
    },
    "type": {
      "lighthouse": "gauge"
    }
  },
  "system_virt_mem_available_bytes": {
    "doc": {
      "lighthouse": "Available system virtual memory"
    },
    "labels": {
      "lighthouse": {}
    },
    "type": {
      "lighthouse": "gauge"
    }
  },
  "system_virt_mem_free_bytes": {
    "doc": {
      "lighthouse": "Free system virtual memory"
    },
    "labels": {
      "lighthouse": {}
    },
    "type": {
      "lighthouse": "gauge"
    }
  },
  "system_virt_mem_percentage": {
    "doc": {
      "lighthouse": "Percentage of used virtual memory"
    },
    "labels": {
      "lighthouse": {}
    },
    "type": {
      "lighthouse": "gauge"
    }
  },
  "system_virt_mem_total_bytes": {
    "doc": {
      "lighthouse": "Total system virtual memory"
    },
    "labels": {
      "lighthouse": {}
    },
    "type": {
      "lighthouse": "gauge"
    }
  },
  "system_virt_mem_used_bytes": {
    "doc": {
      "lighthouse": "Used system virtual memory"
    },
    "labels": {
      "lighthouse": {}
    },
    "type": {
      "lighthouse": "gauge"
    }
  },
  "total_eligible_balances": {
    "doc": {
      "prysm": "The total amount of ether, in gwei, that is eligible for voting of previous epoch"
    },
    "labels": {
      "prysm": {}
    },
    "type": {
      "prysm": "gauge"
    }
  },
  "total_voted_target_balances": {
    "doc": {
      "prysm": "The total amount of ether, in gwei, that has been used in voting attestation target of previous epoch"
    },
    "labels": {
      "prysm": {}
    },
    "type": {
      "prysm": "gauge"
    }
  },
  "unaggregated_attestations_in_pool_total": {
    "doc": {
      "prysm": "The number of unaggregated attestations in the pool."
    },
    "labels": {
      "prysm": {}
    },
    "type": {
      "prysm": "gauge"
    }
  },
  "validator_beacon_node_aggregate_requests": {
    "doc": {
      "teku": "Counter recording the number of requests for aggregate attestations"
    },
    "labels": {
      "teku": {
        "outcome": [
          "SUCCESS"
        ]
      }
    },
    "type": {
      "teku": "counter"
    }
  },
  "validator_beacon_node_aggregation_subscription_requests": {
    "doc": {
      "teku": "Counter recording the number of requests to subscribe to committees for aggregation"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "counter"
    }
  },
  "validator_beacon_node_duties_requests": {
    "doc": {
      "teku": "Counter recording the number of requests for validator duties"
    },
    "labels": {
      "teku": {
        "outcome": [
          "SUCCESS",
          "ERROR"
        ]
      }
    },
    "type": {
      "teku": "counter"
    }
  },
  "validator_beacon_node_fork_info_requests": {
    "doc": {
      "teku": "Counter recording the number of requests for fork info"
    },
    "labels": {
      "teku": {
        "outcome": [
          "SUCCESS"
        ]
      }
    },
    "type": {
      "teku": "counter"
    }
  },
  "validator_beacon_node_persistent_subscription_requests": {
    "doc": {
      "teku": "Counter recording the number of requests to subscribe to persistent committees"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "counter"
    }
  },
  "validator_beacon_node_published_aggregate": {
    "doc": {
      "teku": "Counter recording the number of signed aggregate attestations sent to the beacon node"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "counter"
    }
  },
  "validator_beacon_node_published_attestation": {
    "doc": {
      "teku": "Counter recording the number of signed attestations sent to the beacon node"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "counter"
    }
  },
  "validator_beacon_node_published_block": {
    "doc": {
      "teku": "Counter recording the number of signed blocks sent to the beacon node"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "counter"
    }
  },
  "validator_beacon_node_unsigned_attestation_requests": {
    "doc": {
      "teku": "Counter recording the number of requests for unsigned attestations"
    },
    "labels": {
      "teku": {
        "outcome": [
          "SUCCESS"
        ]
      }
    },
    "type": {
      "teku": "counter"
    }
  },
  "validator_beacon_node_unsigned_block_requests": {
    "doc": {
      "teku": "Counter recording the number of requests for unsigned blocks"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "counter"
    }
  },
  "validator_count": {
    "doc": {
      "prysm": "The total number of validators"
    },
    "labels": {
      "prysm": {
        "state": [
          "Active"
        ]
      }
    },
    "type": {
      "prysm": "gauge"
    }
  },
  "validator_local_validator_count": {
    "doc": {
      "teku": "Current number of valdiators running in this validator client"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "validator_scheduled_duties_current": {
    "doc": {
      "teku": "Current number of pending duties that have been scheduled"
    },
    "labels": {
      "teku": {}
    },
    "type": {
      "teku": "gauge"
    }
  },
  "validators_total_balance": {
    "doc": {
      "prysm": "The total balance of validators, in GWei"
    },
    "labels": {
      "prysm": {
        "state": [
          "Active"
        ]
      }
    },
    "type": {
      "prysm": "gauge"
    }
  },
  "validators_total_effective_balance": {
    "doc": {
      "prysm": "The total effective balance of validators, in GWei"
    },
    "labels": {
      "prysm": {
        "state": [
          "Active"
        ]
      }
    },
    "type": {
      "prysm": "gauge"
    }
  },
  "warn": {
    "doc": {
      "lighthouse": "Count of warns logged"
    },
    "labels": {
      "lighthouse": {}
    },
    "type": {
      "lighthouse": "counter"
    }
  }
}